{"version":3,"file":"index.js","sources":["../src/compatMapBabel.js","../src/fileReadAsString.js","../src/fileWriteFromString.js","../src/versionCompare.js","../src/platformToPluginNames.js","../src/compatMapToCompatMapWithModule.js","../src/compatMapWithOnly.js","../src/pluginNameToPlugin.js","../src/compileFileStructure.js"],"sourcesContent":["const pluginJSON = require(\"@babel/preset-env/data/plugins.json\")\n\nexport const compatMapBabel = pluginJSON\n","import fs from \"fs\"\n\nexport const fileReadAsString = (location) =>\n  new Promise((resolve, reject) => {\n    fs.readFile(location, (error, buffer) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(buffer.toString())\n      }\n    })\n  })\n","import fs from \"fs\"\n\nconst sequence = require(\"promise-sequential\") // rollup fails if using import here\n\nconst getFileLStat = (path) => {\n  return new Promise((resolve, reject) => {\n    fs.lstat(path, (error, lstat) => {\n      if (error) {\n        reject({ status: 500, reason: error.code })\n      } else {\n        resolve(lstat)\n      }\n    })\n  })\n}\n\nconst createFolder = ({ location }) => {\n  return new Promise((resolve, reject) => {\n    fs.mkdir(location, (error) => {\n      if (error) {\n        // au cas ou deux script essayent de crÃ©e un dossier peu importe qui y arrive c'est ok\n        if (error.code === \"EEXIST\") {\n          getFileLStat(location).then((stat) => {\n            if (stat.isDirectory()) {\n              resolve()\n            } else {\n              reject({ status: 500, reason: \"expect a directory\" })\n            }\n          })\n        } else {\n          reject({ status: 500, reason: error.code })\n        }\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\nconst normalizeSeparation = (filename) => filename.replace(/\\\\/g, \"/\")\n\nconst createFolderUntil = ({ location }) => {\n  let path = normalizeSeparation(location)\n  // remove first / in case path starts with / (linux)\n  // because it would create a \"\" entry in folders array below\n  // tryig to create a folder at \"\"\n  const pathStartsWithSlash = path[0] === \"/\"\n  if (pathStartsWithSlash) {\n    path = path.slice(1)\n  }\n  const folders = path.split(\"/\")\n\n  folders.pop()\n\n  return sequence(\n    folders.map((_, index) => {\n      return () => {\n        const folderLocation = folders.slice(0, index + 1).join(\"/\")\n        return createFolder({\n          location: `${pathStartsWithSlash ? \"/\" : \"\"}${folderLocation}`,\n        })\n      }\n    }),\n  )\n}\n\nexport const fileWriteFromString = (location, content) => {\n  return createFolderUntil({ location }).then(() => {\n    return new Promise((resolve, reject) => {\n      fs.writeFile(location, content, (error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve()\n        }\n      })\n    })\n  })\n}\n","const semver = (version) => {\n  if (typeof version === \"number\") {\n    return {\n      major: version,\n      minor: 0,\n      patch: 0,\n    }\n  }\n  if (typeof version === \"string\") {\n    if (version.indexOf(\".\") > -1) {\n      const parts = version.split(\".\")\n      return {\n        major: Number(parts[0]),\n        minor: parts[1] ? Number(parts[1]) : 0,\n        patch: parts[2] ? Number(parts[2]) : 0,\n      }\n    }\n    if (isNaN(version)) {\n      return {\n        major: 0,\n        minor: 0,\n        patch: 0,\n      }\n    }\n    return {\n      major: Number(version),\n      minor: 0,\n      patch: 0,\n    }\n  }\n  throw new TypeError(`version must be a number or a string, got: ${typeof version}`)\n}\n\nexport const versionCompare = (versionA, versionB) => {\n  const semanticVersionA = semver(versionA)\n  const semanticVersionB = semver(versionB)\n\n  const majorDiff = semanticVersionA.major - semanticVersionB.major\n  if (majorDiff > 0) {\n    return majorDiff\n  }\n  if (majorDiff < 0) {\n    return majorDiff\n  }\n\n  const minorDiff = semanticVersionA.minor - semanticVersionB.minor\n  if (minorDiff > 0) {\n    return minorDiff\n  }\n  if (minorDiff < 0) {\n    return minorDiff\n  }\n\n  const patchDiff = semanticVersionA.patch - semanticVersionB.patch\n  if (patchDiff > 0) {\n    return patchDiff\n  }\n  if (patchDiff < 0) {\n    return patchDiff\n  }\n\n  return 0\n}\n\nexport const versionEqual = (versionA, versionB) => {\n  return String(versionA) === String(versionB)\n}\n\nexport const versionIsAbove = (versionSupposedAbove, versionSupposedBelow) => {\n  return versionCompare(versionSupposedAbove, versionSupposedBelow) > 0\n}\n\nexport const versionIsBelow = (versionSupposedBelow, versionSupposedAbove) => {\n  return versionCompare(versionSupposedBelow, versionSupposedAbove) < 0\n}\n\nexport const versionIsBelowOrEqual = (versionSupposedBelow, versionSupposedAbove) => {\n  return (\n    versionEqual(versionSupposedBelow, versionSupposedAbove) ||\n    versionIsBelow(versionSupposedBelow, versionSupposedAbove)\n  )\n}\n\nexport const versionHighest = (versionA, versionB) => {\n  return versionIsAbove(versionA, versionB) ? versionA : versionB\n}\n\nexport const versionLowest = (versionA, versionB) => {\n  return versionIsBelow(versionA, versionB) ? versionA : versionB\n}\n","import { versionIsBelow } from \"./versionCompare.js\"\n\nexport const getPlatformVersionForPlugin = (compatMap, pluginName, platformName) => {\n  if (pluginName in compatMap === false) {\n    throw new Error(`unknown plugin ${pluginName}`)\n  }\n  const pluginCompatMap = compatMap[pluginName]\n  return platformName in pluginCompatMap ? pluginCompatMap[platformName] : \"Infinity\"\n}\n\nexport const platformToPluginNames = (compatMap, platformName, platformVersion) => {\n  const pluginNames = Object.keys(compatMap)\n\n  return pluginNames\n    .filter((pluginName) => {\n      const platformVersionForPlugin = getPlatformVersionForPlugin(\n        compatMap,\n        pluginName,\n        platformName,\n      )\n      return versionIsBelow(platformVersion, platformVersionForPlugin)\n    })\n    .sort()\n}\n","export const compatMapToCompatMapWithModule = (compatMap, moduleFormat) => {\n  // hardcode that nothing supports module for now\n  // of course we would like to use\n  // https://github.com/babel/babel/blob/090c364a90fe73d36a30707fc612ce037bdbbb24/packages/babel-preset-env/data/built-in-modules.json#L1\n  // but let's force it for now\n  // and once everything works fine we'll test how it behaves with native modules\n  if (moduleFormat === \"commonjs\") {\n    return {\n      ...compatMap,\n      ...{\n        \"transform-modules-commonjs\": {},\n      },\n    }\n  }\n  if (moduleFormat === \"systemjs\") {\n    return {\n      ...compatMap,\n      ...{\n        \"transform-modules-systemjs\": {},\n      },\n    }\n  }\n\n  return compatMap\n}\n","export const compatMapWithOnly = (compatMap, pluginNames) => {\n  const compatMapSubset = {}\n\n  pluginNames.forEach((pluginName) => {\n    compatMapSubset[pluginName] = pluginName in compatMap ? compatMap[pluginName] : {}\n  })\n\n  return compatMapSubset\n}\n","import availablePlugins from \"@babel/preset-env/lib/available-plugins.js\"\n\nexport { availablePlugins }\n\nexport const pluginNameToPlugin = (pluginName) => availablePlugins[pluginName]\n","import path from \"path\"\nimport { createFileStructure } from \"@dmail/project-structure\"\nimport { fileReadAsString } from \"./fileReadAsString.js\"\nimport { fileWriteFromString } from \"./fileWriteFromString.js\"\nimport { platformToPluginNames } from \"./platformToPluginNames.js\"\nimport { compatMapBabel } from \"./compatMapBabel.js\"\nimport { compatMapToCompatMapWithModule } from \"./compatMapToCompatMapWithModule.js\"\nimport { compatMapWithOnly } from \"./compatMapWithOnly.js\"\nimport { pluginNameToPlugin } from \"./pluginNameToPlugin.js\"\n\nconst { transformAsync } = require(\"@babel/core\") // rollup fails if using import here\n\nexport const compileFileStructure = ({\n  root,\n  config = \"structure.config.js\",\n  predicate = ({ compile }) => compile,\n  into = \"dist\",\n  platformName = \"node\",\n  platformVersion = \"8.0\",\n  moduleOutput = \"commonjs\",\n  compatMap = compatMapBabel,\n  pluginNames = Object.keys(compatMap),\n}) => {\n  compatMap = compatMapWithOnly(compatMap, pluginNames)\n  compatMap = compatMapToCompatMapWithModule(compatMapBabel, moduleOutput)\n\n  const pluginNamesForPlatform = platformToPluginNames(compatMap, platformName, platformVersion)\n  const plugins = pluginNamesForPlatform.map((pluginName) => pluginNameToPlugin(pluginName))\n\n  const transpile = ({ code, filename, sourceFileName }) => {\n    return transformAsync(code, {\n      plugins,\n      filename,\n      sourceMaps: true,\n      sourceFileName,\n    })\n  }\n\n  const compileAndWrite = ({ absoluteName, relativeName }) => {\n    return fileReadAsString(absoluteName).then((source) => {\n      const buildRelativeName = `${into}/${relativeName}`\n      const buildLocation = `${root}/${buildRelativeName}`\n      const sourceMapName = `${path.basename(relativeName)}.map`\n      const sourceMapLocationForSource = `${sourceMapName}`\n      const sourceMapLocation = `${root}/${into}/${relativeName}.map`\n      const sourceNameForSourceMap = path.relative(path.dirname(sourceMapLocation), absoluteName)\n\n      return transpile({\n        code: source,\n        filename: absoluteName,\n        sourceFileName: sourceNameForSourceMap,\n      })\n        .then(({ code, map }) => {\n          if (map) {\n            code = `${code}\n//# sourceMappingURL=${sourceMapLocationForSource}`\n            return Promise.all([\n              fileWriteFromString(buildLocation, code),\n              fileWriteFromString(sourceMapLocation, JSON.stringify(map, null, \"  \")),\n            ])\n          }\n\n          return fileWriteFromString(buildLocation, code)\n        })\n        .then(() => {\n          console.log(`${relativeName} -> ${buildRelativeName} `)\n        })\n    })\n  }\n\n  return createFileStructure({ root, config }).then(({ forEachFileMatching }) => {\n    return forEachFileMatching(predicate, compileAndWrite)\n  })\n}\n"],"names":["pluginJSON","require","compatMapBabel","fileReadAsString","location","Promise","resolve","reject","fs","readFile","error","buffer","toString","sequence","getFileLStat","path","lstat","status","reason","code","createFolder","mkdir","then","stat","isDirectory","normalizeSeparation","filename","replace","createFolderUntil","pathStartsWithSlash","slice","folders","split","pop","map","_","index","folderLocation","join","fileWriteFromString","content","writeFile","semver","version","major","minor","patch","indexOf","parts","Number","isNaN","TypeError","versionCompare","versionA","versionB","semanticVersionA","semanticVersionB","majorDiff","minorDiff","patchDiff","versionEqual","String","versionIsAbove","versionSupposedAbove","versionSupposedBelow","versionIsBelow","versionIsBelowOrEqual","versionHighest","versionLowest","getPlatformVersionForPlugin","compatMap","pluginName","platformName","Error","pluginCompatMap","platformToPluginNames","platformVersion","pluginNames","Object","keys","filter","platformVersionForPlugin","sort","compatMapToCompatMapWithModule","moduleFormat","compatMapWithOnly","compatMapSubset","forEach","pluginNameToPlugin","availablePlugins","transformAsync","compileFileStructure","root","config","predicate","compile","into","moduleOutput","pluginNamesForPlatform","plugins","transpile","sourceFileName","sourceMaps","compileAndWrite","absoluteName","relativeName","source","buildRelativeName","buildLocation","sourceMapName","basename","sourceMapLocationForSource","sourceMapLocation","sourceNameForSourceMap","relative","dirname","all","JSON","stringify","console","log","createFileStructure","forEachFileMatching"],"mappings":";;;;;;;;;;;AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,qCAAD,CAA1B;;AAEA,MAAaC,cAAc,GAAGF,UAAvB;;ACAA,MAAMG,gBAAgB,GAAIC,QAAD,IAC9B,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAC/BC,EAAE,CAACC,QAAH,CAAYL,QAAZ,EAAsB,CAACM,KAAD,EAAQC,MAAR,KAAmB;QACnCD,KAAJ,EAAW;MACTH,MAAM,CAACG,KAAD,CAAN;KADF,MAEO;MACLJ,OAAO,CAACK,MAAM,CAACC,QAAP,EAAD,CAAP;;GAJJ;CADF,CADK;;ACAP,MAAMC,QAAQ,GAAGZ,OAAO,CAAC,oBAAD,CAAxB;;;AAEA,MAAMa,YAAY,GAAIC,OAAD,IAAU;SACtB,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCC,EAAE,CAACQ,KAAH,CAASD,OAAT,EAAe,CAACL,KAAD,EAAQM,KAAR,KAAkB;UAC3BN,KAAJ,EAAW;QACTH,MAAM,CAAC;UAAEU,MAAM,EAAE,GAAV;UAAeC,MAAM,EAAER,KAAK,CAACS;SAA9B,CAAN;OADF,MAEO;QACLb,OAAO,CAACU,KAAD,CAAP;;KAJJ;GADK,CAAP;CADF;;AAYA,MAAMI,YAAY,GAAG,CAAC;EAAEhB;CAAH,KAAkB;SAC9B,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCC,EAAE,CAACa,KAAH,CAASjB,QAAT,EAAoBM,KAAD,IAAW;UACxBA,KAAJ,EAAW;;YAELA,KAAK,CAACS,IAAN,KAAe,QAAnB,EAA6B;UAC3BL,YAAY,CAACV,QAAD,CAAZ,CAAuBkB,IAAvB,CAA6BC,IAAD,IAAU;gBAChCA,IAAI,CAACC,WAAL,EAAJ,EAAwB;cACtBlB,OAAO;aADT,MAEO;cACLC,MAAM,CAAC;gBAAEU,MAAM,EAAE,GAAV;gBAAeC,MAAM,EAAE;eAAxB,CAAN;;WAJJ;SADF,MAQO;UACLX,MAAM,CAAC;YAAEU,MAAM,EAAE,GAAV;YAAeC,MAAM,EAAER,KAAK,CAACS;WAA9B,CAAN;;OAXJ,MAaO;QACLb,OAAO;;KAfX;GADK,CAAP;CADF;;AAuBA,MAAMmB,mBAAmB,GAAIC,QAAD,IAAcA,QAAQ,CAACC,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAA1C;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;EAAExB;CAAH,KAAkB;MACtCW,OAAI,GAAGU,mBAAmB,CAACrB,QAAD,CAA9B,CAD0C;;;;QAKpCyB,mBAAmB,GAAGd,OAAI,CAAC,CAAD,CAAJ,KAAY,GAAxC;;MACIc,mBAAJ,EAAyB;IACvBd,OAAI,GAAGA,OAAI,CAACe,KAAL,CAAW,CAAX,CAAP;;;QAEIC,OAAO,GAAGhB,OAAI,CAACiB,KAAL,CAAW,GAAX,CAAhB;EAEAD,OAAO,CAACE,GAAR;SAEOpB,QAAQ,CACbkB,OAAO,CAACG,GAAR,CAAY,CAACC,CAAD,EAAIC,KAAJ,KAAc;WACjB,MAAM;YACLC,cAAc,GAAGN,OAAO,CAACD,KAAR,CAAc,CAAd,EAAiBM,KAAK,GAAG,CAAzB,EAA4BE,IAA5B,CAAiC,GAAjC,CAAvB;aACOlB,YAAY,CAAC;QAClBhB,QAAQ,EAAG,GAAEyB,mBAAmB,GAAG,GAAH,GAAS,EAAG,GAAEQ,cAAe;OAD5C,CAAnB;KAFF;GADF,CADa,CAAf;CAbF;;AAyBA,MAAaE,mBAAmB,GAAG,CAACnC,QAAD,EAAWoC,OAAX,KAAuB;SACjDZ,iBAAiB,CAAC;IAAExB;GAAH,CAAjB,CAAgCkB,IAAhC,CAAqC,MAAM;WACzC,IAAIjB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtCC,EAAE,CAACiC,SAAH,CAAarC,QAAb,EAAuBoC,OAAvB,EAAiC9B,KAAD,IAAW;YACrCA,KAAJ,EAAW;UACTH,MAAM,CAACG,KAAD,CAAN;SADF,MAEO;UACLJ,OAAO;;OAJX;KADK,CAAP;GADK,CAAP;CADK;;AClEP,MAAMoC,MAAM,GAAIC,OAAD,IAAa;MACtB,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;WACxB;MACLC,KAAK,EAAED,OADF;MAELE,KAAK,EAAE,CAFF;MAGLC,KAAK,EAAE;KAHT;;;MAME,OAAOH,OAAP,KAAmB,QAAvB,EAAiC;QAC3BA,OAAO,CAACI,OAAR,CAAgB,GAAhB,IAAuB,CAAC,CAA5B,EAA+B;YACvBC,KAAK,GAAGL,OAAO,CAACX,KAAR,CAAc,GAAd,CAAd;aACO;QACLY,KAAK,EAAEK,MAAM,CAACD,KAAK,CAAC,CAAD,CAAN,CADR;QAELH,KAAK,EAAEG,KAAK,CAAC,CAAD,CAAL,GAAWC,MAAM,CAACD,KAAK,CAAC,CAAD,CAAN,CAAjB,GAA8B,CAFhC;QAGLF,KAAK,EAAEE,KAAK,CAAC,CAAD,CAAL,GAAWC,MAAM,CAACD,KAAK,CAAC,CAAD,CAAN,CAAjB,GAA8B;OAHvC;;;QAMEE,KAAK,CAACP,OAAD,CAAT,EAAoB;aACX;QACLC,KAAK,EAAE,CADF;QAELC,KAAK,EAAE,CAFF;QAGLC,KAAK,EAAE;OAHT;;;WAMK;MACLF,KAAK,EAAEK,MAAM,CAACN,OAAD,CADR;MAELE,KAAK,EAAE,CAFF;MAGLC,KAAK,EAAE;KAHT;;;QAMI,IAAIK,SAAJ,CAAe,8CAA6C,OAAOR,OAAQ,EAA3E,CAAN;CA9BF;;AAiCA,MAAaS,cAAc,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;QAC9CC,gBAAgB,GAAGb,MAAM,CAACW,QAAD,CAA/B;QACMG,gBAAgB,GAAGd,MAAM,CAACY,QAAD,CAA/B;QAEMG,SAAS,GAAGF,gBAAgB,CAACX,KAAjB,GAAyBY,gBAAgB,CAACZ,KAA5D;;MACIa,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;MAEEA,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;QAGIC,SAAS,GAAGH,gBAAgB,CAACV,KAAjB,GAAyBW,gBAAgB,CAACX,KAA5D;;MACIa,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;MAEEA,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;QAGIC,SAAS,GAAGJ,gBAAgB,CAACT,KAAjB,GAAyBU,gBAAgB,CAACV,KAA5D;;MACIa,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;MAEEA,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;SAGK,CAAP;CA5BK;AA+BP,AAAO,MAAMC,YAAY,GAAG,CAACP,QAAD,EAAWC,QAAX,KAAwB;SAC3CO,MAAM,CAACR,QAAD,CAAN,KAAqBQ,MAAM,CAACP,QAAD,CAAlC;CADK;AAIP,MAAaQ,cAAc,GAAG,CAACC,oBAAD,EAAuBC,oBAAvB,KAAgD;SACrEZ,cAAc,CAACW,oBAAD,EAAuBC,oBAAvB,CAAd,GAA6D,CAApE;CADK;AAIP,MAAaC,cAAc,GAAG,CAACD,oBAAD,EAAuBD,oBAAvB,KAAgD;SACrEX,cAAc,CAACY,oBAAD,EAAuBD,oBAAvB,CAAd,GAA6D,CAApE;CADK;AAIP,MAAaG,qBAAqB,GAAG,CAACF,oBAAD,EAAuBD,oBAAvB,KAAgD;SAEjFH,YAAY,CAACI,oBAAD,EAAuBD,oBAAvB,CAAZ,IACAE,cAAc,CAACD,oBAAD,EAAuBD,oBAAvB,CAFhB;CADK;AAOP,MAAaI,cAAc,GAAG,CAACd,QAAD,EAAWC,QAAX,KAAwB;SAC7CQ,cAAc,CAACT,QAAD,EAAWC,QAAX,CAAd,GAAqCD,QAArC,GAAgDC,QAAvD;CADK;AAIP,MAAac,aAAa,GAAG,CAACf,QAAD,EAAWC,QAAX,KAAwB;SAC5CW,cAAc,CAACZ,QAAD,EAAWC,QAAX,CAAd,GAAqCD,QAArC,GAAgDC,QAAvD;CADK;;MCrFMe,2BAA2B,GAAG,CAACC,SAAD,EAAYC,UAAZ,EAAwBC,YAAxB,KAAyC;MAC9ED,UAAU,IAAID,SAAd,KAA4B,KAAhC,EAAuC;UAC/B,IAAIG,KAAJ,CAAW,kBAAiBF,UAAW,EAAvC,CAAN;;;QAEIG,eAAe,GAAGJ,SAAS,CAACC,UAAD,CAAjC;SACOC,YAAY,IAAIE,eAAhB,GAAkCA,eAAe,CAACF,YAAD,CAAjD,GAAkE,UAAzE;CALK;AAQP,MAAaG,qBAAqB,GAAG,CAACL,SAAD,EAAYE,YAAZ,EAA0BI,eAA1B,KAA8C;QAC3EC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYT,SAAZ,CAApB;SAEOO,WAAW,CACfG,MADI,CACIT,UAAD,IAAgB;UAChBU,wBAAwB,GAAGZ,2BAA2B,CAC1DC,SAD0D,EAE1DC,UAF0D,EAG1DC,YAH0D,CAA5D;WAKOP,cAAc,CAACW,eAAD,EAAkBK,wBAAlB,CAArB;GAPG,EASJC,IATI,EAAP;CAHK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCVMC,8BAA8B,GAAG,CAACb,SAAD,EAAYc,YAAZ,KAA6B;;;;;;MAMrEA,YAAY,KAAK,UAArB,EAAiC;6BAE1Bd,SADL,EAEK;oCAC6B;KAHlC;;;MAOEc,YAAY,KAAK,UAArB,EAAiC;6BAE1Bd,SADL,EAEK;oCAC6B;KAHlC;;;SAQKA,SAAP;CAvBK;;MCAMe,iBAAiB,GAAG,CAACf,SAAD,EAAYO,WAAZ,KAA4B;QACrDS,eAAe,GAAG,EAAxB;EAEAT,WAAW,CAACU,OAAZ,CAAqBhB,UAAD,IAAgB;IAClCe,eAAe,CAACf,UAAD,CAAf,GAA8BA,UAAU,IAAID,SAAd,GAA0BA,SAAS,CAACC,UAAD,CAAnC,GAAkD,EAAhF;GADF;SAIOe,eAAP;CAPK;;MCIME,kBAAkB,GAAIjB,UAAD,IAAgBkB,gBAAgB,CAAClB,UAAD,CAA3D;;ACMP,MAAM;EAAEmB;IAAmBzF,OAAO,CAAC,aAAD,CAAlC;;;AAEA,MAAa0F,oBAAoB,GAAG,CAAC;EACnCC,IADmC;EAEnCC,MAAM,GAAG,qBAF0B;EAGnCC,SAAS,GAAG,CAAC;IAAEC;GAAH,KAAiBA,OAHM;EAInCC,IAAI,GAAG,MAJ4B;EAKnCxB,YAAY,GAAG,MALoB;EAMnCI,eAAe,GAAG,KANiB;EAOnCqB,YAAY,GAAG,UAPoB;EAQnC3B,SAAS,GAAGpE,cARuB;EASnC2E,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYT,SAAZ;CAToB,KAU9B;EACJA,SAAS,GAAGe,iBAAiB,CAACf,SAAD,EAAYO,WAAZ,CAA7B;EACAP,SAAS,GAAGa,8BAA8B,CAACjF,cAAD,EAAiB+F,YAAjB,CAA1C;QAEMC,sBAAsB,GAAGvB,qBAAqB,CAACL,SAAD,EAAYE,YAAZ,EAA0BI,eAA1B,CAApD;QACMuB,OAAO,GAAGD,sBAAsB,CAAChE,GAAvB,CAA4BqC,UAAD,IAAgBiB,kBAAkB,CAACjB,UAAD,CAA7D,CAAhB;;QAEM6B,SAAS,GAAG,CAAC;IAAEjF,IAAF;IAAQO,QAAR;IAAkB2E;GAAnB,KAAwC;WACjDX,cAAc,CAACvE,IAAD,EAAO;MAC1BgF,OAD0B;MAE1BzE,QAF0B;MAG1B4E,UAAU,EAAE,IAHc;MAI1BD;KAJmB,CAArB;GADF;;QASME,eAAe,GAAG,CAAC;IAAEC,YAAF;IAAgBC;GAAjB,KAAoC;WACnDtG,gBAAgB,CAACqG,YAAD,CAAhB,CAA+BlF,IAA/B,CAAqCoF,MAAD,IAAY;YAC/CC,iBAAiB,GAAI,GAAEX,IAAK,IAAGS,YAAa,EAAlD;YACMG,aAAa,GAAI,GAAEhB,IAAK,IAAGe,iBAAkB,EAAnD;YACME,aAAa,GAAI,GAAE9F,IAAI,CAAC+F,QAAL,CAAcL,YAAd,CAA4B,MAArD;YACMM,0BAA0B,GAAI,GAAEF,aAAc,EAApD;YACMG,iBAAiB,GAAI,GAAEpB,IAAK,IAAGI,IAAK,IAAGS,YAAa,MAA1D;YACMQ,sBAAsB,GAAGlG,IAAI,CAACmG,QAAL,CAAcnG,IAAI,CAACoG,OAAL,CAAaH,iBAAb,CAAd,EAA+CR,YAA/C,CAA/B;aAEOJ,SAAS,CAAC;QACfjF,IAAI,EAAEuF,MADS;QAEfhF,QAAQ,EAAE8E,YAFK;QAGfH,cAAc,EAAEY;OAHF,CAAT,CAKJ3F,IALI,CAKC,CAAC;QAAEH,IAAF;QAAQe;OAAT,KAAmB;YACnBA,GAAJ,EAAS;UACPf,IAAI,GAAI,GAAEA,IAAK;uBACJ4F,0BAA2B,EADtC;iBAEO1G,OAAO,CAAC+G,GAAR,CAAY,CACjB7E,mBAAmB,CAACqE,aAAD,EAAgBzF,IAAhB,CADF,EAEjBoB,mBAAmB,CAACyE,iBAAD,EAAoBK,IAAI,CAACC,SAAL,CAAepF,GAAf,EAAoB,IAApB,EAA0B,IAA1B,CAApB,CAFF,CAAZ,CAAP;;;eAMKK,mBAAmB,CAACqE,aAAD,EAAgBzF,IAAhB,CAA1B;OAfG,EAiBJG,IAjBI,CAiBC,MAAM;QACViG,OAAO,CAACC,GAAR,CAAa,GAAEf,YAAa,OAAME,iBAAkB,GAApD;OAlBG,CAAP;KARK,CAAP;GADF;;SAgCOc,oCAAmB,CAAC;IAAE7B,IAAF;IAAQC;GAAT,CAAnB,CAAsCvE,IAAtC,CAA2C,CAAC;IAAEoG;GAAH,KAA6B;WACtEA,mBAAmB,CAAC5B,SAAD,EAAYS,eAAZ,CAA1B;GADK,CAAP;CA1DK;;;;;;;;;;;;;;;;;;"}