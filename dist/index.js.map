{"version":3,"file":"index.js","sources":["../src/writeFileFromString.js","../node_modules/@dmail/project-structure/src/createLocationMeta.js","../node_modules/@dmail/project-structure/src/forEachFileMatching.js","../node_modules/@dmail/project-structure/src/createRoot.js","../src/getFileContentAsString.js","../src/createGetGroup/versionCompare.js","../src/createGetGroup/generateGroupForPlugins.js","../src/createGetGroup/limitGroup.js","../src/createGetGroup/createGetScoreForGroupCompatMap.js","../src/createGetGroup/createGetGroupForPlatform.js","../src/compileRoot.js"],"sourcesContent":["import fs from \"fs\"\n\nconst sequence = require(\"promise-sequential\") // rollup fails if using import here\n\nconst getFileLStat = (path) => {\n  return new Promise((resolve, reject) => {\n    fs.lstat(path, (error, lstat) => {\n      if (error) {\n        reject({ status: 500, reason: error.code })\n      } else {\n        resolve(lstat)\n      }\n    })\n  })\n}\n\nconst createFolder = ({ location }) => {\n  return new Promise((resolve, reject) => {\n    fs.mkdir(location, (error) => {\n      if (error) {\n        // au cas ou deux script essayent de crÃ©e un dossier peu importe qui y arrive c'est ok\n        if (error.code === \"EEXIST\") {\n          getFileLStat(location).then((stat) => {\n            if (stat.isDirectory()) {\n              resolve()\n            } else {\n              reject({ status: 500, reason: \"expect a directory\" })\n            }\n          })\n        } else {\n          reject({ status: 500, reason: error.code })\n        }\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\nconst normalizeSeparation = (filename) => filename.replace(/\\\\/g, \"/\")\n\nconst createFolderUntil = ({ location }) => {\n  let path = normalizeSeparation(location)\n  // remove first / in case path starts with / (linux)\n  // because it would create a \"\" entry in folders array below\n  // tryig to create a folder at \"\"\n  const pathStartsWithSlash = path[0] === \"/\"\n  if (pathStartsWithSlash) {\n    path = path.slice(1)\n  }\n  const folders = path.split(\"/\")\n\n  folders.pop()\n\n  return sequence(\n    folders.map((_, index) => {\n      return () => {\n        const folderLocation = folders.slice(0, index + 1).join(\"/\")\n        return createFolder({\n          location: `${pathStartsWithSlash ? \"/\" : \"\"}${folderLocation}`,\n        })\n      }\n    }),\n  )\n}\n\nexport const writeFileFromString = (location, content) => {\n  return createFolderUntil({ location }).then(() => {\n    return new Promise((resolve, reject) => {\n      fs.writeFile(location, content, (error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve()\n        }\n      })\n    })\n  })\n}\n","// https://git-scm.com/docs/gitignore\n\nconst match = ({\n  patterns,\n  parts,\n  skipPredicate,\n  lastSkipRequired,\n  lastPatternRequired,\n  matchPart,\n  skipUntilStartsMatching = false,\n}) => {\n  let matched\n  let patternIndex = 0\n  let partIndex = 0\n  let matchIndex = 0\n\n  if (patterns.length === 0 && parts.length === 0) {\n    matched = true\n  } else if (patterns.length === 0 && parts.length) {\n    matched = true\n    matchIndex = parts.length\n  } else if (patterns.length && parts.length === 0) {\n    matched = false\n  } else {\n    matched = true\n\n    while (true) {\n      const pattern = patterns[patternIndex]\n      const part = parts[partIndex]\n      const isSkipPattern = skipPredicate(pattern)\n      const isLastPattern = patternIndex === patterns.length - 1\n      const isLastPart = partIndex === parts.length - 1\n\n      if (isSkipPattern && isLastPart && isLastPattern) {\n        matchIndex += part.length\n        break\n      }\n\n      if (isSkipPattern && isLastPattern && isLastPart === false) {\n        matchIndex += part.length\n        break\n      }\n\n      if (isSkipPattern && isLastPattern === false && isLastPart) {\n        // test next pattern on current part\n        patternIndex++\n        const nextPatternResult = match({\n          patterns: patterns.slice(patternIndex),\n          parts: parts.slice(partIndex),\n          skipPredicate,\n          lastSkipRequired,\n          lastPatternRequired,\n          matchPart,\n        })\n        matched = nextPatternResult.matched\n        patternIndex += nextPatternResult.patternIndex\n        partIndex += nextPatternResult.partIndex\n\n        if (matched && patternIndex === patterns.length - 1) {\n          matchIndex += nextPatternResult.matchIndex\n          break\n        }\n        if (matched && partIndex === parts.length - 1) {\n          matchIndex += nextPatternResult.matchIndex\n          break\n        }\n        if (matched) {\n          matchIndex += nextPatternResult.matchIndex\n          continue\n        }\n\n        // we still increase the matchIndex by the length of the part because\n        // this part has matched even if the full pattern is not satisfied\n        matchIndex += part.length\n        break\n      }\n\n      if (isSkipPattern && isLastPattern === false && isLastPart === false) {\n        // test next pattern on current part\n        patternIndex++\n\n        const skipResult = match({\n          patterns: patterns.slice(patternIndex),\n          parts: parts.slice(partIndex),\n          skipPredicate,\n          lastSkipRequired,\n          lastPatternRequired,\n          matchPart,\n          skipUntilStartsMatching: true,\n        })\n\n        matched = skipResult.matched\n        patternIndex += skipResult.patternIndex\n        partIndex += skipResult.partIndex\n        matchIndex += skipResult.matchIndex\n\n        if (matched && patternIndex === patterns.length - 1) {\n          break\n        }\n        if (matched && partIndex === parts.length - 1) {\n          break\n        }\n        if (matched) {\n          continue\n        }\n        break\n      }\n\n      const partMatch = matchPart(pattern, part)\n      matched = partMatch.matched\n      matchIndex += partMatch.matchIndex\n\n      if (matched && isLastPattern && isLastPart) {\n        break\n      }\n\n      if (matched && isLastPattern && isLastPart === false) {\n        if (lastPatternRequired) {\n          matched = false\n        }\n        break\n      }\n\n      if (matched && isLastPattern === false && isLastPart) {\n        const remainingPatternAreSkip = patterns\n          .slice(patternIndex + 1)\n          .every((pattern) => skipPredicate(pattern))\n\n        if (remainingPatternAreSkip && lastSkipRequired) {\n          matched = false\n          break\n        }\n        if (remainingPatternAreSkip === false) {\n          matched = false\n          break\n        }\n        break\n      }\n\n      if (matched && isLastPattern === false && isLastPart === false) {\n        patternIndex++\n        partIndex++\n        continue\n      }\n\n      if (matched === false && skipUntilStartsMatching && isLastPart === false) {\n        partIndex++ // keep searching for that pattern\n        matchIndex++\n        continue\n      }\n\n      break\n    }\n\n    return {\n      matched,\n      matchIndex,\n      patternIndex,\n      partIndex,\n    }\n  }\n}\n\nconst locationMatch = (pattern, location) => {\n  return match({\n    patterns: pattern.split(\"/\"),\n    parts: location.split(\"/\"),\n    lastPatternRequired: false,\n    lastSkipRequired: true,\n    skipPredicate: (sequencePattern) => sequencePattern === \"**\",\n    matchPart: (sequencePattern, sequencePart) => {\n      return match({\n        patterns: sequencePattern.split(\"\"),\n        parts: sequencePart.split(\"\"),\n        lastPatternRequired: true,\n        lastSkipRequired: false,\n        skipPredicate: (charPattern) => charPattern === \"*\",\n        matchPart: (charPattern, charSource) => {\n          const matched = charPattern === charSource\n          return {\n            matched,\n            patternIndex: 0,\n            partIndex: 0,\n            matchIndex: matched ? 1 : 0,\n          }\n        },\n      })\n    },\n  })\n}\n\nexport const createLocationMeta = ({ mergeMeta = (a, b) => ({ ...a, ...b }) } = {}) => {\n  const patternAndMetaList = []\n\n  const addMetaAtPattern = (pattern, meta = {}) => {\n    const existingPattern = patternAndMetaList.find(\n      (patternAndMeta) => patternAndMeta.pattern === pattern,\n    )\n    if (existingPattern) {\n      existingPattern.meta = mergeMeta(existingPattern.meta, meta)\n    } else {\n      patternAndMetaList.push({\n        pattern,\n        meta,\n      })\n    }\n  }\n\n  const getMetaForLocation = (filename) => {\n    return patternAndMetaList.reduce((previousMeta, { pattern, meta }) => {\n      const { matched } = locationMatch(pattern, filename)\n      return matched ? mergeMeta(previousMeta, meta) : previousMeta\n    }, {})\n  }\n\n  const canContainsMetaMatching = (filename, metaPredicate) => {\n    const matchIndexForFile = filename.split(\"/\").join(\"\").length\n    const partialMatch = patternAndMetaList.some(({ pattern, meta }) => {\n      const { matched, matchIndex } = locationMatch(pattern, filename)\n      return matched === false && matchIndex >= matchIndexForFile && metaPredicate(meta)\n    })\n    if (partialMatch) {\n      return true\n    }\n\n    // no partial match satisfies predicate, does it work on a full match ?\n    const meta = getMetaForLocation(filename)\n    return Boolean(metaPredicate(meta))\n  }\n\n  const toJSON = () => {\n    return patternAndMetaList\n  }\n\n  return {\n    addMetaAtPattern,\n    getMetaForLocation,\n    canContainsMetaMatching,\n    toJSON,\n  }\n}\n","import fs from \"fs\"\n\nconst readDirectory = (dirname) =>\n  new Promise((resolve, reject) => {\n    fs.readdir(dirname, (error, names) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(names)\n      }\n    })\n  })\n\nconst readStat = (filename) =>\n  new Promise((resolve, reject) => {\n    fs.stat(filename, (error, stat) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(stat)\n      }\n    })\n  })\n\nconst nothingToDo = {}\n\nexport const forEachFileMatching = (\n  { getMetaForLocation, canContainsMetaMatching },\n  root,\n  metaPredicate,\n  callback,\n) => {\n  const visit = (folderRelativeLocation) => {\n    const folderAbsoluteLocation = folderRelativeLocation\n      ? `${root}/${folderRelativeLocation}`\n      : root\n\n    return readDirectory(folderAbsoluteLocation).then((names) => {\n      return Promise.all(\n        names.map((name) => {\n          const ressourceRelativeLocation = folderRelativeLocation\n            ? `${folderRelativeLocation}/${name}`\n            : name\n          const ressourceAbsoluteLocation = `${root}/${ressourceRelativeLocation}`\n\n          return readStat(ressourceAbsoluteLocation).then((stat) => {\n            if (stat.isDirectory()) {\n              if (canContainsMetaMatching(ressourceRelativeLocation, metaPredicate) === false) {\n                return [nothingToDo]\n              }\n              return visit(ressourceRelativeLocation)\n            }\n\n            const meta = getMetaForLocation(ressourceRelativeLocation)\n            if (metaPredicate(meta)) {\n              return Promise.resolve(\n                callback({\n                  absoluteName: ressourceAbsoluteLocation,\n                  relativeName: ressourceRelativeLocation,\n                  meta,\n                }),\n              ).then((result) => {\n                return [result]\n              })\n            }\n            return [nothingToDo]\n          })\n        }),\n      ).then((results) => {\n        return results.reduce((previous, results) => {\n          return [...previous, ...results]\n        }, [])\n      })\n    })\n  }\n  return visit().then((allResults) => {\n    return allResults.filter((result) => result !== nothingToDo)\n  })\n}\n","import { createLocationMeta } from \"./createLocationMeta.js\"\nimport { forEachFileMatching } from \"./forEachFileMatching.js\"\n\nconst CONFIG_FILE_NAME = \"structure.config.js\"\n\nconst loadMetasForRoot = (root) => {\n  return new Promise((resolve, reject) => {\n    const filename = `${root}/${CONFIG_FILE_NAME}`\n\n    let value\n    let errored = false\n    try {\n      // eslint-disable-nextline no-dynamic-require\n      value = require(filename)\n    } catch (e) {\n      value = e\n      errored = true\n    }\n\n    if (errored) {\n      const error = value\n      if (error && error.code === \"MODULE_NOT_FOUND\") {\n        return reject(new Error(`${filename} not found`))\n      }\n      if (error && error.code === \"SYNTAX_ERROR\") {\n        console.error(`${filename} contains a syntax error`)\n        return reject(error)\n      }\n      if (error && error.code === \"REFERENCE_ERROR\") {\n        console.error(`${filename} contains a reference error`)\n        return reject(error)\n      }\n      return reject(error)\n    }\n\n    const namespace = value\n    const namespaceType = typeof namespace\n    if (namespaceType !== \"object\") {\n      return reject(new TypeError(`${filename} must export an object, got ${namespaceType}`))\n    }\n\n    resolve(namespace.metas || {})\n  })\n}\n\nexport const createRoot = ({ root, getLocationMeta = () => createLocationMeta() }) => {\n  return loadMetasForRoot(root).then((metas) => {\n    const locationMeta = getLocationMeta()\n\n    Object.keys(metas).forEach((metaName) => {\n      const metaPatterns = metas[metaName]\n      Object.keys(metaPatterns).forEach((pattern) => {\n        const metaValue = metaPatterns[pattern]\n        locationMeta.addMetaAtPattern(pattern, { [metaName]: metaValue })\n      })\n    })\n\n    const scopedForEachFileMatching = (predicate, callback) =>\n      forEachFileMatching(locationMeta, root, predicate, callback)\n\n    const listFileMatching = (predicate) =>\n      forEachFileMatching(locationMeta, root, predicate, ({ relativeName }) => relativeName)\n\n    return {\n      forEachFileMatching: scopedForEachFileMatching,\n      listFileMatching,\n    }\n  })\n}\n","import fs from \"fs\"\n\nexport const getFileContentAsString = (location) =>\n  new Promise((resolve, reject) => {\n    fs.readFile(location, (error, buffer) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(buffer.toString())\n      }\n    })\n  })\n","const semver = (versionString) => {\n  const parts = versionString.split(\".\")\n  return {\n    major: parseInt(parts[0]),\n    minor: parts[1] ? parseInt(parts[1]) : 0,\n    patch: parts[2] ? parseInt(parts[2]) : 0,\n  }\n}\n\nexport const compareVersion = (versionA, versionB) => {\n  const semanticVersionA = semver(versionA)\n  const semanticVersionB = semver(versionB)\n\n  const majorDiff = semanticVersionA.major - semanticVersionB.major\n  if (majorDiff > 0) {\n    return majorDiff\n  }\n  if (majorDiff < 0) {\n    return majorDiff\n  }\n\n  const minorDiff = semanticVersionA.minor - semanticVersionB.minor\n  if (minorDiff > 0) {\n    return minorDiff\n  }\n  if (minorDiff < 0) {\n    return minorDiff\n  }\n\n  const patchDiff = semanticVersionA.patch - semanticVersionB.patch\n  if (patchDiff > 0) {\n    return patchDiff\n  }\n  if (patchDiff < 0) {\n    return patchDiff\n  }\n\n  return 0\n}\n\nexport const versionIsAbove = (versionSupposedAbove, versionSupposedBelow) => {\n  return compareVersion(versionSupposedAbove, versionSupposedBelow) > 0\n}\n\nexport const versionIsBelow = (versionSupposedBelow, versionSupposedAbove) => {\n  return compareVersion(versionSupposedBelow, versionSupposedAbove) < 0\n}\n","import { versionIsAbove } from \"./versionCompare.js\"\n\n/*\nit returns\n{\n\t41: ['transform-template-literals'], // means that below 41 we need this plugin\n\t44: ['transform-template-literals', 'transform-literals']\n}\n*/\nconst getPlatformCompatMap = (plugins, platformName) => {\n  const platformCompatMap = {}\n\n  plugins.forEach(({ pluginName, compatMap }) => {\n    if (platformName in compatMap === false) return\n\n    const compatVersion = compatMap[platformName]\n    if (compatVersion in platformCompatMap) {\n      platformCompatMap[compatVersion].push(pluginName)\n    } else {\n      platformCompatMap[compatVersion] = [pluginName]\n    }\n  })\n\n  // add plugin not directly specified as being present for versions\n  Object.keys(platformCompatMap).forEach((version) => {\n    const pluginNames = platformCompatMap[version]\n    plugins.forEach(({ pluginName, compatMap }) => {\n      if (pluginNames.indexOf(pluginName) > -1) return\n\n      const compatVersion = compatMap[platformName]\n      if (versionIsAbove(version, compatVersion)) {\n        pluginNames.push(pluginName)\n      }\n    })\n  })\n\n  return platformCompatMap\n}\n\nconst getPlatformNames = (plugins) => {\n  const names = []\n  plugins.forEach(({ compatMap }) => {\n    Object.keys(compatMap).forEach((platformName) => {\n      if (names.indexOf(platformName) === -1) {\n        names.push(platformName)\n      }\n    })\n  })\n  return names\n}\n\n/*\nit returns\n[\n\t{\n\t\tfeatures: ['transform-template-literals'],\n\t\tplatforms: {\n\t\t\tchrome: [44, 45]\n\t\t},\n\t},\n\t{\n\t\tfeatures: ['transform-template-literals', 'transform-literals'],\n\t\tplatforms: {\n\t\t\tchrome: [44]\n\t\t},\n\t},\n}\n*/\nexport const generateGroupForPlugins = (plugins) => {\n  const platformNames = getPlatformNames(plugins)\n\n  const platformAndCompatMap = platformNames.map((platformName) => {\n    return {\n      platformName,\n      platformCompatMap: getPlatformCompatMap(plugins, platformName),\n    }\n  })\n\n  const groups = []\n  platformAndCompatMap.forEach(({ platformName, platformCompatMap }) => {\n    Object.keys(platformCompatMap).forEach((version) => {\n      const pluginNames = platformCompatMap[version].sort()\n      const existingGroup = groups.find((group) => {\n        return group.pluginNames.join(\"\") === pluginNames.join(\"\")\n      })\n      if (existingGroup) {\n        const groupCompatMap = existingGroup.compatMap\n        if (platformName in groupCompatMap) {\n          groupCompatMap[platformName].push(version)\n        } else {\n          groupCompatMap[platformName] = [version]\n        }\n      } else {\n        groups.push({\n          pluginNames,\n          compatMap: { [platformName]: [version] },\n        })\n      }\n    })\n  })\n\n  return groups\n}\n","const mergePluginNames = (pluginList, secondPluginList) => {\n  return [...pluginList, ...secondPluginList.filter((plugin) => pluginList.indexOf(plugin) === -1)]\n}\n\nconst removeFromArray = (array, value) => {\n  const index = array.indexOf(value)\n  if (index > -1) {\n    array.splice(index, 1)\n  }\n}\n\nconst getChunkSizes = (array, size) => {\n  let i = 0\n  const chunkSize = Math.ceil(array.length / size)\n  const chunkSizes = []\n  while (i < array.length) {\n    if (i + chunkSize > array.length) {\n      const chunkSize = array.length - i\n      i += chunkSize\n      chunkSizes.push(chunkSize)\n    } else {\n      i += chunkSize\n      chunkSizes.push(chunkSize)\n    }\n  }\n  return chunkSizes\n}\n\nexport const limitGroup = (groups, getScoreForGroup, count = 4) => {\n  if (groups.length <= count) {\n    return groups\n  }\n\n  let i = 0\n  const chunkSizes = getChunkSizes(groups, count).reverse()\n  const finalGroups = []\n  let remainingGroups = groups\n\n  while (i < chunkSizes.length) {\n    const sortedRemainingGroups = remainingGroups\n      .sort((a, b) => getScoreForGroup(a) - getScoreForGroup(b))\n      .reverse()\n    const groupsToMerge = sortedRemainingGroups.slice(0, chunkSizes[i])\n    const mergedGroup = groupsToMerge.reduce(\n      // eslint-disable-next-line no-loop-func\n      (previous, group, index) => {\n        const result = {}\n        result.pluginNames = mergePluginNames(previous.pluginNames, group.pluginNames)\n        const mergedCompatMap = { ...previous.compatMap }\n        Object.keys(group.compatMap).forEach((platformName) => {\n          const versions = group.compatMap[platformName]\n          versions.forEach((platformVersion) => {\n            let merged = false\n            if (platformName in mergedCompatMap) {\n              const mergedVersions = mergedCompatMap[platformName]\n              if (mergedVersions.indexOf(platformVersion) === -1) {\n                mergedVersions.push(platformVersion)\n                merged = true\n              }\n            } else {\n              mergedCompatMap[platformName] = [platformVersion]\n              merged = true\n            }\n            if (merged) {\n              sortedRemainingGroups.slice(index + 1).forEach((nextGroup) => {\n                if (platformName in nextGroup.compatMap) {\n                  removeFromArray(nextGroup.compatMap[platformName], platformVersion)\n                }\n              })\n            }\n          })\n        })\n        result.compatMap = mergedCompatMap\n        return result\n      },\n      {\n        pluginNames: [],\n        compatMap: {},\n      },\n    )\n    finalGroups.push(mergedGroup)\n    remainingGroups = sortedRemainingGroups.slice(chunkSizes[i])\n    i++\n  }\n\n  return finalGroups\n}\n","import { versionIsAbove } from \"./versionCompare.js\"\n\nconst createGetScoreFromVersionUsage = (stats) => {\n  const versionNames = Object.keys(stats)\n  if (versionNames.length === 0) {\n    return () => null\n  }\n  const sortedVersions = versionNames\n    .sort((versionA, versionB) => versionIsAbove(versionA, versionB))\n    .reverse()\n  const highestVersion = sortedVersions.shift()\n\n  return (platformVersion) => {\n    if (platformVersion === highestVersion || versionIsAbove(platformVersion, highestVersion)) {\n      return stats[highestVersion]\n    }\n    const closestVersion = sortedVersions.find((version) => {\n      return platformVersion === version || versionIsAbove(platformVersion, version)\n    })\n    return closestVersion ? stats[closestVersion] : null\n  }\n}\n\nconst createGetScoreFromPlatformUsage = (stats) => {\n  const platformNames = Object.keys(stats)\n  const scoreMap = {}\n  platformNames.forEach((platformName) => {\n    scoreMap[platformName] = createGetScoreFromVersionUsage(stats[platformName])\n  })\n  return (platformName, platformVersion) => {\n    if (platformName in scoreMap) {\n      const versionUsage = scoreMap[platformName](platformVersion)\n      return versionUsage === null ? stats.other : versionUsage\n    }\n    return stats.other\n  }\n}\n\nexport const createGetScoreForGroupCompatMap = (stats) => {\n  const getScoreFromPlatformUsage = createGetScoreFromPlatformUsage(stats)\n\n  const getPlatformScore = (platformName, versions) => {\n    return versions.reduce((previous, version) => {\n      return previous + getScoreFromPlatformUsage(platformName, version)\n    }, 0)\n  }\n\n  const getScore = (groupCompatMap) => {\n    return Object.keys(groupCompatMap).reduce((previous, platformName) => {\n      return previous + getPlatformScore(platformName, groupCompatMap[platformName])\n    }, 0)\n  }\n\n  return getScore\n}\n","// https://github.com/babel/babel/blob/master/packages/babel-preset-env/data/plugins.json\n\nimport { generateGroupForPlugins } from \"./generateGroupForPlugins.js\"\nimport { limitGroup } from \"./limitGroup.js\"\nimport { createGetScoreForGroupCompatMap } from \"./createGetScoreForGroupCompatMap.js\"\nimport { versionIsBelow } from \"./versionCompare.js\"\n\nconst availablePlugins = require(\"@babel/preset-env/lib/available-plugins.js\")\nconst defaultPluginsData = require(\"@babel/preset-env/data/plugins.json\")\n\nconst defaultStats = {\n  chrome: {\n    \"51\": 0.6,\n    \"44\": 0.01,\n  },\n  firefox: {\n    \"53\": 0.6,\n    \"0\": 0.1, // it means oldest version of firefox will get a score of 0.1\n  },\n  edge: {\n    \"12\": 0.1,\n    \"0\": 0.001,\n  },\n  safari: {\n    \"10\": 0.1,\n    \"0\": 0.001,\n  },\n  node: {\n    \"8\": 0.5,\n    \"0\": 0.001,\n  },\n  other: 0.001,\n}\n\nexport const createGetGroupForPlatform = (\n  {\n    stats = defaultStats,\n    requiredPluginNames = Object.keys(availablePlugins),\n    pluginsData = defaultPluginsData,\n    size = 4,\n    moduleOutput,\n  } = {},\n) => {\n  const groupWithEverything = {\n    pluginNames: requiredPluginNames,\n    compatMap: {},\n    plugins: requiredPluginNames.map((name) => availablePlugins[name]),\n  }\n\n  const groupWithNothing = {\n    pluginNames: [],\n    plugins: [],\n    compatMap: {},\n  }\n\n  const plugins = Object.keys(pluginsData)\n    .filter((pluginName) => {\n      return requiredPluginNames.indexOf(pluginName) > -1\n    })\n    .map((pluginName) => {\n      return {\n        pluginName,\n        compatMap: pluginsData[pluginName],\n      }\n    })\n\n  // hardcode that nothing supports module for now\n  // of course we would like to use\n  // https://github.com/babel/babel/blob/090c364a90fe73d36a30707fc612ce037bdbbb24/packages/babel-preset-env/data/built-in-modules.json#L1\n  // but let's force it for now\n  // and once everything works fine we'll test how it behaves with native modules\n  if (moduleOutput === \"commonjs\") {\n    plugins.push({\n      pluginName: \"transform-modules-commonjs\",\n      compatMap: {},\n    })\n  }\n  if (moduleOutput === \"systemjs\") {\n    plugins.push({\n      pluginName: \"transform-modules-systemjs\",\n      compatMap: {},\n    })\n  }\n\n  const allGroups = generateGroupForPlugins(plugins)\n  const getScoreForGroupCompatMap = createGetScoreForGroupCompatMap(stats)\n  const groups = limitGroup(\n    allGroups,\n    ({ compatMap }) => getScoreForGroupCompatMap(compatMap),\n    size,\n  )\n\n  const getGroupForPlatform = ({ platformName, platformVersion }) => {\n    const platformIsUnknown = groups.every(({ compatMap }) => platformName in compatMap === false)\n    if (platformIsUnknown) {\n      return groupWithEverything\n    }\n\n    const groupForPlatform = groups.find(({ compatMap }) => {\n      if (platformName in compatMap === false) {\n        return false\n      }\n      const versions = compatMap[platformName]\n      const highestVersion = versions.sort((a, b) => versionIsBelow(a, b))[0]\n      return versionIsBelow(platformVersion, highestVersion)\n    })\n    if (groupForPlatform) {\n      return {\n        ...groupForPlatform,\n        plugins: groupForPlatform.pluginNames.map((name) => availablePlugins[name]),\n      }\n    }\n    return groupWithNothing\n  }\n\n  return {\n    getGroupForPlatform,\n  }\n}\n","import path from \"path\"\nimport { createRoot } from \"@dmail/project-structure\"\nimport { getFileContentAsString } from \"./getFileContentAsString.js\"\nimport { writeFileFromString } from \"./writeFileFromString.js\"\nimport { createGetGroupForPlatform } from \"./createGetGroup/createGetGroupForPlatform.js\"\n\nconst { transformAsync } = require(\"@babel/core\") // rollup fails if using import here\n\nconst metaPredicate = ({ compile }) => compile\n\nexport const compileRoot = ({\n  root,\n  into = \"dist\",\n  platformName = \"node\",\n  platformVersion = \"8.0\",\n  moduleOutput = \"commonjs\",\n}) => {\n  const { getGroupForPlatform } = createGetGroupForPlatform({\n    moduleOutput,\n  })\n\n  const { plugins } = getGroupForPlatform({\n    platformName,\n    platformVersion,\n  })\n\n  const transpile = ({ code, filename, sourceFileName }) => {\n    return transformAsync(code, {\n      plugins,\n      filename,\n      sourceMaps: true,\n      sourceFileName,\n    })\n  }\n\n  return createRoot({ root }).then(({ forEachFileMatching }) => {\n    return forEachFileMatching(metaPredicate, ({ absoluteName, relativeName }) => {\n      return getFileContentAsString(absoluteName).then((source) => {\n        const buildRelativeName = `${into}/${relativeName}`\n        const buildLocation = `${root}/${buildRelativeName}`\n        const sourceMapName = `${path.basename(relativeName)}.map`\n        const sourceMapLocationForSource = `${sourceMapName}`\n        const sourceMapLocation = `${root}/${into}/${relativeName}.map`\n        const sourceNameForSourceMap = path.relative(path.dirname(sourceMapLocation), absoluteName)\n\n        return transpile({\n          code: source,\n          filename: absoluteName,\n          sourceFileName: sourceNameForSourceMap,\n        })\n          .then(({ code, map }) => {\n            if (map) {\n              code = `${code}\n//# sourceMappingURL=${sourceMapLocationForSource}`\n              return Promise.all([\n                writeFileFromString(buildLocation, code),\n                writeFileFromString(sourceMapLocation, JSON.stringify(map, null, \"  \")),\n              ])\n            }\n\n            return writeFileFromString(buildLocation, code)\n          })\n          .then(() => {\n            console.log(`${relativeName} -> ${buildRelativeName} `)\n          })\n      })\n    })\n  })\n}\n"],"names":["sequence","require","getFileLStat","path","Promise","resolve","reject","fs","lstat","error","status","reason","code","createFolder","location","mkdir","then","stat","isDirectory","normalizeSeparation","filename","replace","createFolderUntil","pathStartsWithSlash","slice","folders","split","pop","map","_","index","folderLocation","join","writeFileFromString","content","writeFile","getFileContentAsString","readFile","buffer","toString","semver","versionString","parts","major","parseInt","minor","patch","compareVersion","versionA","versionB","semanticVersionA","semanticVersionB","majorDiff","minorDiff","patchDiff","versionIsAbove","versionSupposedAbove","versionSupposedBelow","versionIsBelow","getPlatformCompatMap","plugins","platformName","platformCompatMap","forEach","pluginName","compatMap","compatVersion","push","Object","keys","version","pluginNames","indexOf","getPlatformNames","names","generateGroupForPlugins","platformNames","platformAndCompatMap","groups","sort","existingGroup","find","group","groupCompatMap","mergePluginNames","pluginList","secondPluginList","filter","plugin","removeFromArray","array","value","splice","getChunkSizes","size","i","chunkSize","Math","ceil","length","chunkSizes","limitGroup","getScoreForGroup","count","reverse","finalGroups","remainingGroups","sortedRemainingGroups","a","b","groupsToMerge","mergedGroup","reduce","previous","result","mergedCompatMap","versions","platformVersion","merged","mergedVersions","nextGroup","createGetScoreFromVersionUsage","stats","versionNames","sortedVersions","highestVersion","shift","closestVersion","createGetScoreFromPlatformUsage","scoreMap","versionUsage","other","createGetScoreForGroupCompatMap","getScoreFromPlatformUsage","getPlatformScore","getScore","availablePlugins","defaultPluginsData","defaultStats","chrome","firefox","edge","safari","node","createGetGroupForPlatform","requiredPluginNames","pluginsData","moduleOutput","groupWithEverything","name","groupWithNothing","allGroups","getScoreForGroupCompatMap","getGroupForPlatform","platformIsUnknown","every","groupForPlatform","transformAsync","metaPredicate","compile","compileRoot","root","into","transpile","sourceFileName","sourceMaps","createRoot","forEachFileMatching","absoluteName","relativeName","source","buildRelativeName","buildLocation","sourceMapName","basename","sourceMapLocationForSource","sourceMapLocation","sourceNameForSourceMap","relative","dirname","all","JSON","stringify","console","log"],"mappings":"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"}