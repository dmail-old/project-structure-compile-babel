{"version":3,"file":"index.js","sources":["../src/writeFileFromString.js","../src/getFileContentAsString.js","../src/createGetGroup/versionCompare.js","../src/createGetGroup/generateGroupForPlugins.js","../src/createGetGroup/limitGroup.js","../src/createGetGroup/createGetScoreForGroupCompatMap.js","../src/createGetGroup/createGetGroupForPlatform.js","../src/compileFileStructure.js"],"sourcesContent":["import fs from \"fs\"\n\nconst sequence = require(\"promise-sequential\") // rollup fails if using import here\n\nconst getFileLStat = (path) => {\n  return new Promise((resolve, reject) => {\n    fs.lstat(path, (error, lstat) => {\n      if (error) {\n        reject({ status: 500, reason: error.code })\n      } else {\n        resolve(lstat)\n      }\n    })\n  })\n}\n\nconst createFolder = ({ location }) => {\n  return new Promise((resolve, reject) => {\n    fs.mkdir(location, (error) => {\n      if (error) {\n        // au cas ou deux script essayent de crÃ©e un dossier peu importe qui y arrive c'est ok\n        if (error.code === \"EEXIST\") {\n          getFileLStat(location).then((stat) => {\n            if (stat.isDirectory()) {\n              resolve()\n            } else {\n              reject({ status: 500, reason: \"expect a directory\" })\n            }\n          })\n        } else {\n          reject({ status: 500, reason: error.code })\n        }\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\nconst normalizeSeparation = (filename) => filename.replace(/\\\\/g, \"/\")\n\nconst createFolderUntil = ({ location }) => {\n  let path = normalizeSeparation(location)\n  // remove first / in case path starts with / (linux)\n  // because it would create a \"\" entry in folders array below\n  // tryig to create a folder at \"\"\n  const pathStartsWithSlash = path[0] === \"/\"\n  if (pathStartsWithSlash) {\n    path = path.slice(1)\n  }\n  const folders = path.split(\"/\")\n\n  folders.pop()\n\n  return sequence(\n    folders.map((_, index) => {\n      return () => {\n        const folderLocation = folders.slice(0, index + 1).join(\"/\")\n        return createFolder({\n          location: `${pathStartsWithSlash ? \"/\" : \"\"}${folderLocation}`,\n        })\n      }\n    }),\n  )\n}\n\nexport const writeFileFromString = (location, content) => {\n  return createFolderUntil({ location }).then(() => {\n    return new Promise((resolve, reject) => {\n      fs.writeFile(location, content, (error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve()\n        }\n      })\n    })\n  })\n}\n","import fs from \"fs\"\n\nexport const getFileContentAsString = (location) =>\n  new Promise((resolve, reject) => {\n    fs.readFile(location, (error, buffer) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(buffer.toString())\n      }\n    })\n  })\n","const semver = (version) => {\n  if (typeof version === \"number\") {\n    return {\n      major: version,\n      minor: 0,\n      patch: 0,\n    }\n  }\n  if (typeof version === \"string\") {\n    const parts = version.split(\".\")\n    return {\n      major: Number(parts[0]),\n      minor: parts[1] ? Number(parts[1]) : 0,\n      patch: parts[2] ? Number(parts[2]) : 0,\n    }\n  }\n  throw new TypeError(`version must be a number or a string, got: ${typeof version}`)\n}\n\nexport const compareVersion = (versionA, versionB) => {\n  const semanticVersionA = semver(versionA)\n  const semanticVersionB = semver(versionB)\n\n  const majorDiff = semanticVersionA.major - semanticVersionB.major\n  if (majorDiff > 0) {\n    return majorDiff\n  }\n  if (majorDiff < 0) {\n    return majorDiff\n  }\n\n  const minorDiff = semanticVersionA.minor - semanticVersionB.minor\n  if (minorDiff > 0) {\n    return minorDiff\n  }\n  if (minorDiff < 0) {\n    return minorDiff\n  }\n\n  const patchDiff = semanticVersionA.patch - semanticVersionB.patch\n  if (patchDiff > 0) {\n    return patchDiff\n  }\n  if (patchDiff < 0) {\n    return patchDiff\n  }\n\n  return 0\n}\n\nexport const versionIsAbove = (versionSupposedAbove, versionSupposedBelow) => {\n  return compareVersion(versionSupposedAbove, versionSupposedBelow) > 0\n}\n\nexport const versionIsBelow = (versionSupposedBelow, versionSupposedAbove) => {\n  return compareVersion(versionSupposedBelow, versionSupposedAbove) < 0\n}\n","import { versionIsAbove } from \"./versionCompare.js\"\n\nconst PLATFORM_NAMES = [\"chrome\", \"edge\", \"firefox\", \"safari\", \"node\", \"ios\", \"opera\", \"electron\"]\n\n/*\nit returns\n{\n\t41: ['transform-template-literals'], // means that below 41 we need this plugin\n\t44: ['transform-template-literals', 'transform-literals']\n}\n*/\nconst getPlatformCompatMap = (plugins, platformName) => {\n  const platformCompatMap = {}\n\n  plugins.forEach(({ pluginName, compatMap }) => {\n    const compatVersion = platformName in compatMap ? compatMap[platformName] : \"Infinity\"\n    platformCompatMap[compatVersion] = [\n      ...(compatVersion in platformCompatMap ? platformCompatMap[compatVersion] : []),\n      pluginName,\n    ].sort()\n  })\n\n  Object.keys(platformCompatMap).forEach((version) => {\n    const pluginNames = platformCompatMap[version]\n    const pluginsUnhandled = plugins.filter(({ pluginName }) => {\n      return pluginNames.indexOf(pluginName) === -1\n    })\n    pluginsUnhandled.forEach(({ pluginName, compatMap }) => {\n      const compatVersion = compatMap[platformName] || \"Infinity\"\n      if (versionIsAbove(version, compatVersion)) {\n        platformCompatMap[version] = [...platformCompatMap[version], pluginName].sort()\n      }\n    })\n  })\n\n  return platformCompatMap\n}\n\n/*\nit returns\n[\n\t{\n\t\tfeatures: ['transform-template-literals'],\n\t\tplatforms: {\n\t\t\tchrome: [44, 45]\n\t\t},\n\t},\n\t{\n\t\tfeatures: ['transform-template-literals', 'transform-literals'],\n\t\tplatforms: {\n\t\t\tchrome: [44]\n\t\t},\n\t},\n}\n*/\nexport const generateGroupForPlugins = (plugins) => {\n  const platformAndCompatMap = PLATFORM_NAMES.map((platformName) => {\n    return {\n      platformName,\n      platformCompatMap: getPlatformCompatMap(plugins, platformName),\n    }\n  })\n\n  const groups = []\n  platformAndCompatMap.forEach(({ platformName, platformCompatMap }) => {\n    Object.keys(platformCompatMap).forEach((version) => {\n      const pluginNames = platformCompatMap[version]\n      const existingGroup = groups.find((group) => {\n        return group.pluginNames.join(\"\") === pluginNames.join(\"\")\n      })\n      if (existingGroup) {\n        const groupCompatMap = existingGroup.compatMap\n        groupCompatMap[platformName] = [\n          ...(platformName in groupCompatMap ? groupCompatMap[platformName] : []),\n          version,\n        ]\n      } else {\n        groups.push({\n          pluginNames,\n          compatMap: { [platformName]: [version] },\n        })\n      }\n    })\n  })\n\n  return groups\n}\n","import { versionIsAbove } from \"./versionCompare.js\"\n\nconst mergePluginNames = (pluginList, secondPluginList) => {\n  return [...pluginList, ...secondPluginList.filter((plugin) => pluginList.indexOf(plugin) === -1)]\n}\n\nconst getChunkSizes = (array, size) => {\n  let i = 0\n  const chunkSize = Math.ceil(array.length / size)\n  const chunkSizes = []\n  while (i < array.length) {\n    if (i + chunkSize > array.length) {\n      const chunkSize = array.length - i\n      i += chunkSize\n      chunkSizes.push(chunkSize)\n    } else {\n      i += chunkSize\n      chunkSizes.push(chunkSize)\n    }\n  }\n  return chunkSizes\n}\n\nconst highestVersion = (a, b) => {\n  return versionIsAbove(a, b) ? a : b\n}\n\nconst groupReducer = (previous, group) => {\n  const pluginNames = mergePluginNames(previous.pluginNames, group.pluginNames).sort()\n\n  const previousCompatMap = previous.compatMap\n  const groupCompatMap = group.compatMap\n  const compatMap = { ...previousCompatMap }\n  Object.keys(groupCompatMap).forEach((platformName) => {\n    groupCompatMap[platformName].forEach((platformVersion) => {\n      compatMap[platformName] = String(\n        platformName in compatMap\n          ? highestVersion(compatMap[platformName], platformVersion)\n          : platformVersion,\n      )\n    })\n  })\n\n  return {\n    pluginNames,\n    compatMap,\n  }\n}\n\nexport const limitGroup = (groups, getScoreForGroup, count = 4) => {\n  let i = 0\n  const chunkSizes = getChunkSizes(groups, count).reverse()\n  const finalGroups = []\n  const sortedGroups = groups.sort((a, b) => getScoreForGroup(b) - getScoreForGroup(a))\n  let remainingGroups = sortedGroups\n\n  while (i < chunkSizes.length) {\n    const groupsToMerge = remainingGroups.slice(0, chunkSizes[i])\n    remainingGroups = remainingGroups.slice(chunkSizes[i])\n    const mergedGroup = groupsToMerge.reduce(groupReducer, {\n      pluginNames: [],\n      compatMap: {},\n    })\n    if (Object.keys(mergedGroup.compatMap).length) {\n      finalGroups.push(mergedGroup)\n    }\n    i++\n  }\n\n  return finalGroups\n}\n","import { versionIsBelow, versionIsAbove } from \"./versionCompare.js\"\n\nconst createGetScoreFromVersionUsage = (stats) => {\n  const versionNames = Object.keys(stats)\n  if (versionNames.length === 0) {\n    return () => null\n  }\n  const sortedVersions = versionNames.sort((versionA, versionB) =>\n    versionIsBelow(versionA, versionB),\n  )\n  const highestVersion = sortedVersions.shift()\n\n  return (platformVersion) => {\n    if (platformVersion === highestVersion || versionIsAbove(platformVersion, highestVersion)) {\n      return stats[highestVersion]\n    }\n    const closestVersion = sortedVersions.find((version) => {\n      return platformVersion === version || versionIsAbove(platformVersion, version)\n    })\n    return closestVersion ? stats[closestVersion] : null\n  }\n}\n\nconst createGetScoreFromPlatformUsage = (stats) => {\n  const platformNames = Object.keys(stats)\n  const scoreMap = {}\n  platformNames.forEach((platformName) => {\n    scoreMap[platformName] = createGetScoreFromVersionUsage(stats[platformName])\n  })\n  return (platformName, platformVersion) => {\n    if (platformName in scoreMap) {\n      const versionUsage = scoreMap[platformName](platformVersion)\n      return versionUsage === null ? stats.other : versionUsage\n    }\n    return stats.other\n  }\n}\n\nexport const createGetScoreForGroupCompatMap = (stats) => {\n  const getScoreFromPlatformUsage = createGetScoreFromPlatformUsage(stats)\n\n  const getPlatformScore = (platformName, versions) => {\n    return versions.reduce((previous, version) => {\n      return previous + getScoreFromPlatformUsage(platformName, version)\n    }, 0)\n  }\n\n  const getScore = (groupCompatMap) => {\n    return Object.keys(groupCompatMap).reduce((previous, platformName) => {\n      return previous + getPlatformScore(platformName, groupCompatMap[platformName])\n    }, 0)\n  }\n\n  return getScore\n}\n","// https://github.com/babel/babel/blob/master/packages/babel-preset-env/data/plugins.json\n\nimport { generateGroupForPlugins } from \"./generateGroupForPlugins.js\"\nimport { limitGroup } from \"./limitGroup.js\"\nimport { createGetScoreForGroupCompatMap } from \"./createGetScoreForGroupCompatMap.js\"\nimport { versionIsBelow } from \"./versionCompare.js\"\nimport availablePlugins from \"@babel/preset-env/lib/available-plugins.js\"\n\nexport const defaultPluginsData = require(\"@babel/preset-env/data/plugins.json\")\n\nconst defaultStats = {\n  chrome: {\n    \"51\": 0.6,\n    \"44\": 0.01,\n  },\n  firefox: {\n    \"53\": 0.6,\n    \"0\": 0.1, // it means oldest version of firefox will get a score of 0.1\n  },\n  edge: {\n    \"12\": 0.1,\n    \"0\": 0.001,\n  },\n  safari: {\n    \"10\": 0.1,\n    \"0\": 0.001,\n  },\n  node: {\n    \"8\": 0.5,\n    \"0\": 0.001,\n  },\n  other: 0.001,\n}\n\nconst getPluginTranpilationComplexity = () => 1\n\nconst getGroupTranspilationComplexityScore = (group) =>\n  group.pluginNames.reduce((previous, pluginName) => {\n    return previous + getPluginTranpilationComplexity(pluginName)\n  }, 0)\n\nexport const getPluginsFromNames = (pluginNames) =>\n  pluginNames.map((name) => availablePlugins[name])\n\nexport const createGetGroupForPlatform = (\n  {\n    stats = defaultStats,\n    requiredPluginNames = Object.keys(availablePlugins),\n    pluginsData = defaultPluginsData,\n    size = 4,\n    moduleOutput,\n  } = {},\n) => {\n  const plugins = Object.keys(pluginsData)\n    .filter((pluginName) => {\n      return requiredPluginNames.indexOf(pluginName) > -1\n    })\n    .map((pluginName) => {\n      return {\n        pluginName,\n        compatMap: pluginsData[pluginName],\n      }\n    })\n\n  // hardcode that nothing supports module for now\n  // of course we would like to use\n  // https://github.com/babel/babel/blob/090c364a90fe73d36a30707fc612ce037bdbbb24/packages/babel-preset-env/data/built-in-modules.json#L1\n  // but let's force it for now\n  // and once everything works fine we'll test how it behaves with native modules\n  if (moduleOutput === \"commonjs\") {\n    plugins.push({\n      pluginName: \"transform-modules-commonjs\",\n      compatMap: {},\n    })\n  }\n  if (moduleOutput === \"systemjs\") {\n    plugins.push({\n      pluginName: \"transform-modules-systemjs\",\n      compatMap: {},\n    })\n  }\n\n  const groupWithEverything = {\n    pluginNames: plugins.map(({ pluginName }) => pluginName),\n    compatMap: {},\n  }\n\n  const groupWithNothing = {\n    pluginNames: [],\n    compatMap: {},\n  }\n\n  const allGroups = generateGroupForPlugins(plugins)\n  const getScoreForGroupCompatMap = createGetScoreForGroupCompatMap(stats)\n  const groups = limitGroup(\n    allGroups,\n    ({ compatMap }) => getScoreForGroupCompatMap(compatMap),\n    size,\n  )\n\n  const groupsSortedByComplexityToTranspile = groups.sort(\n    (a, b) => getGroupTranspilationComplexityScore(a) - getGroupTranspilationComplexityScore(b),\n  )\n\n  const getGroupForPlatform = ({ platformName, platformVersion }) => {\n    const platformIsUnknown = groups.every(({ compatMap }) => platformName in compatMap === false)\n    if (platformIsUnknown) {\n      return groupWithEverything\n    }\n\n    const groupWithVersionAbovePlatformVersion = groupsSortedByComplexityToTranspile.find(\n      ({ compatMap }) => {\n        if (platformName in compatMap === false) {\n          return false\n        }\n        return versionIsBelow(platformVersion, compatMap[platformName])\n      },\n    )\n    if (groupWithVersionAbovePlatformVersion) {\n      return groupWithVersionAbovePlatformVersion\n    }\n    return groupWithNothing\n  }\n\n  return {\n    getGroupForPlatform,\n    getAllGroup: () => [groupWithEverything, ...groups, groupWithNothing],\n  }\n}\n","import path from \"path\"\nimport { createFileStructure } from \"@dmail/project-structure\"\nimport { getFileContentAsString } from \"./getFileContentAsString.js\"\nimport { writeFileFromString } from \"./writeFileFromString.js\"\nimport {\n  createGetGroupForPlatform,\n  getPluginsFromNames,\n} from \"./createGetGroup/createGetGroupForPlatform.js\"\n\nconst { transformAsync } = require(\"@babel/core\") // rollup fails if using import here\n\nexport const compileFileStructure = ({\n  root,\n  config = \"structure.config.js\",\n  predicate = ({ compile }) => compile,\n  into = \"dist\",\n  platformName = \"node\",\n  platformVersion = \"8.0\",\n  moduleOutput = \"commonjs\",\n}) => {\n  const { getGroupForPlatform } = createGetGroupForPlatform({\n    moduleOutput,\n  })\n\n  const group = getGroupForPlatform({\n    platformName,\n    platformVersion,\n  })\n  const plugins = getPluginsFromNames(group.pluginNames)\n\n  const transpile = ({ code, filename, sourceFileName }) => {\n    return transformAsync(code, {\n      plugins,\n      filename,\n      sourceMaps: true,\n      sourceFileName,\n    })\n  }\n\n  const compileAndWrite = ({ absoluteName, relativeName }) => {\n    return getFileContentAsString(absoluteName).then((source) => {\n      const buildRelativeName = `${into}/${relativeName}`\n      const buildLocation = `${root}/${buildRelativeName}`\n      const sourceMapName = `${path.basename(relativeName)}.map`\n      const sourceMapLocationForSource = `${sourceMapName}`\n      const sourceMapLocation = `${root}/${into}/${relativeName}.map`\n      const sourceNameForSourceMap = path.relative(path.dirname(sourceMapLocation), absoluteName)\n\n      return transpile({\n        code: source,\n        filename: absoluteName,\n        sourceFileName: sourceNameForSourceMap,\n      })\n        .then(({ code, map }) => {\n          if (map) {\n            code = `${code}\n//# sourceMappingURL=${sourceMapLocationForSource}`\n            return Promise.all([\n              writeFileFromString(buildLocation, code),\n              writeFileFromString(sourceMapLocation, JSON.stringify(map, null, \"  \")),\n            ])\n          }\n\n          return writeFileFromString(buildLocation, code)\n        })\n        .then(() => {\n          console.log(`${relativeName} -> ${buildRelativeName} `)\n        })\n    })\n  }\n\n  return createFileStructure({ root, config }).then(({ forEachFileMatching }) => {\n    return forEachFileMatching(predicate, compileAndWrite)\n  })\n}\n"],"names":["sequence","require","getFileLStat","path","Promise","resolve","reject","fs","lstat","error","status","reason","code","createFolder","location","mkdir","then","stat","isDirectory","normalizeSeparation","filename","replace","createFolderUntil","pathStartsWithSlash","slice","folders","split","pop","map","_","index","folderLocation","join","writeFileFromString","content","writeFile","getFileContentAsString","readFile","buffer","toString","semver","version","major","minor","patch","parts","Number","TypeError","compareVersion","versionA","versionB","semanticVersionA","semanticVersionB","majorDiff","minorDiff","patchDiff","versionIsAbove","versionSupposedAbove","versionSupposedBelow","versionIsBelow","PLATFORM_NAMES","getPlatformCompatMap","plugins","platformName","platformCompatMap","forEach","pluginName","compatMap","compatVersion","sort","Object","keys","pluginNames","pluginsUnhandled","filter","indexOf","generateGroupForPlugins","platformAndCompatMap","groups","existingGroup","find","group","groupCompatMap","push","mergePluginNames","pluginList","secondPluginList","plugin","getChunkSizes","array","size","i","chunkSize","Math","ceil","length","chunkSizes","highestVersion","a","b","groupReducer","previous","previousCompatMap","platformVersion","String","limitGroup","getScoreForGroup","count","reverse","finalGroups","sortedGroups","remainingGroups","groupsToMerge","mergedGroup","reduce","createGetScoreFromVersionUsage","stats","versionNames","sortedVersions","shift","closestVersion","createGetScoreFromPlatformUsage","platformNames","scoreMap","versionUsage","other","createGetScoreForGroupCompatMap","getScoreFromPlatformUsage","getPlatformScore","versions","getScore","defaultPluginsData","defaultStats","chrome","firefox","edge","safari","node","getPluginTranpilationComplexity","getGroupTranspilationComplexityScore","getPluginsFromNames","name","availablePlugins","createGetGroupForPlatform","requiredPluginNames","pluginsData","moduleOutput","groupWithEverything","groupWithNothing","allGroups","getScoreForGroupCompatMap","groupsSortedByComplexityToTranspile","getGroupForPlatform","platformIsUnknown","every","groupWithVersionAbovePlatformVersion","getAllGroup","transformAsync","compileFileStructure","root","config","predicate","compile","into","transpile","sourceFileName","sourceMaps","compileAndWrite","absoluteName","relativeName","source","buildRelativeName","buildLocation","sourceMapName","basename","sourceMapLocationForSource","sourceMapLocation","sourceNameForSourceMap","relative","dirname","all","JSON","stringify","console","log","createFileStructure","forEachFileMatching"],"mappings":"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"}