{"version":3,"file":"index.js","sources":["../src/writeFileFromString.js","../src/getFileContentAsString.js","../src/createGetGroup/versionCompare.js","../src/createGetGroup/generateGroupForPlugins.js","../src/createGetGroup/limitGroup.js","../src/createGetGroup/createGetScoreForGroupCompatMap.js","../src/createGetGroup/createGetGroupForPlatform.js","../src/compileFileStructure.js"],"sourcesContent":["import fs from \"fs\"\n\nconst sequence = require(\"promise-sequential\") // rollup fails if using import here\n\nconst getFileLStat = (path) => {\n  return new Promise((resolve, reject) => {\n    fs.lstat(path, (error, lstat) => {\n      if (error) {\n        reject({ status: 500, reason: error.code })\n      } else {\n        resolve(lstat)\n      }\n    })\n  })\n}\n\nconst createFolder = ({ location }) => {\n  return new Promise((resolve, reject) => {\n    fs.mkdir(location, (error) => {\n      if (error) {\n        // au cas ou deux script essayent de crÃ©e un dossier peu importe qui y arrive c'est ok\n        if (error.code === \"EEXIST\") {\n          getFileLStat(location).then((stat) => {\n            if (stat.isDirectory()) {\n              resolve()\n            } else {\n              reject({ status: 500, reason: \"expect a directory\" })\n            }\n          })\n        } else {\n          reject({ status: 500, reason: error.code })\n        }\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\nconst normalizeSeparation = (filename) => filename.replace(/\\\\/g, \"/\")\n\nconst createFolderUntil = ({ location }) => {\n  let path = normalizeSeparation(location)\n  // remove first / in case path starts with / (linux)\n  // because it would create a \"\" entry in folders array below\n  // tryig to create a folder at \"\"\n  const pathStartsWithSlash = path[0] === \"/\"\n  if (pathStartsWithSlash) {\n    path = path.slice(1)\n  }\n  const folders = path.split(\"/\")\n\n  folders.pop()\n\n  return sequence(\n    folders.map((_, index) => {\n      return () => {\n        const folderLocation = folders.slice(0, index + 1).join(\"/\")\n        return createFolder({\n          location: `${pathStartsWithSlash ? \"/\" : \"\"}${folderLocation}`,\n        })\n      }\n    }),\n  )\n}\n\nexport const writeFileFromString = (location, content) => {\n  return createFolderUntil({ location }).then(() => {\n    return new Promise((resolve, reject) => {\n      fs.writeFile(location, content, (error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve()\n        }\n      })\n    })\n  })\n}\n","import fs from \"fs\"\n\nexport const getFileContentAsString = (location) =>\n  new Promise((resolve, reject) => {\n    fs.readFile(location, (error, buffer) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(buffer.toString())\n      }\n    })\n  })\n","const semver = (version) => {\n  if (typeof version === \"number\") {\n    return {\n      major: version,\n      minor: 0,\n      patch: 0,\n    }\n  }\n  if (typeof version === \"string\") {\n    const parts = version.split(\".\")\n    return {\n      major: Number(parts[0]),\n      minor: parts[1] ? Number(parts[1]) : 0,\n      patch: parts[2] ? Number(parts[2]) : 0,\n    }\n  }\n  throw new TypeError(`version must be a number or a string, got: ${typeof version}`)\n}\n\nexport const compareVersion = (versionA, versionB) => {\n  const semanticVersionA = semver(versionA)\n  const semanticVersionB = semver(versionB)\n\n  const majorDiff = semanticVersionA.major - semanticVersionB.major\n  if (majorDiff > 0) {\n    return majorDiff\n  }\n  if (majorDiff < 0) {\n    return majorDiff\n  }\n\n  const minorDiff = semanticVersionA.minor - semanticVersionB.minor\n  if (minorDiff > 0) {\n    return minorDiff\n  }\n  if (minorDiff < 0) {\n    return minorDiff\n  }\n\n  const patchDiff = semanticVersionA.patch - semanticVersionB.patch\n  if (patchDiff > 0) {\n    return patchDiff\n  }\n  if (patchDiff < 0) {\n    return patchDiff\n  }\n\n  return 0\n}\n\nexport const versionIsAbove = (versionSupposedAbove, versionSupposedBelow) => {\n  return compareVersion(versionSupposedAbove, versionSupposedBelow) > 0\n}\n\nexport const versionIsBelow = (versionSupposedBelow, versionSupposedAbove) => {\n  return compareVersion(versionSupposedBelow, versionSupposedAbove) < 0\n}\n","import { versionIsAbove } from \"./versionCompare.js\"\n\nconst PLATFORM_NAMES = [\"chrome\", \"edge\", \"firefox\", \"safari\", \"node\", \"ios\", \"opera\", \"electron\"]\n\n/*\nit returns\n{\n\t41: ['transform-template-literals'], // means that below 41 we need this plugin\n\t44: ['transform-template-literals', 'transform-literals']\n}\n*/\nconst getPlatformCompatMap = (plugins, platformName) => {\n  const platformCompatMap = {}\n\n  plugins.forEach(({ pluginName, compatMap }) => {\n    if (platformName in compatMap) {\n      const compatVersion = compatMap[platformName]\n      if (compatVersion in platformCompatMap) {\n        platformCompatMap[compatVersion].push(pluginName)\n      } else {\n        platformCompatMap[compatVersion] = [pluginName]\n      }\n    } else {\n      platformCompatMap.Infinity = [pluginName]\n    }\n  })\n\n  // add plugin not directly specified as being present for versions\n  Object.keys(platformCompatMap).forEach((version) => {\n    const pluginNames = platformCompatMap[version]\n    plugins.forEach(({ pluginName, compatMap }) => {\n      if (pluginNames.indexOf(pluginName) > -1) return\n      if (platformName in compatMap === false) return\n\n      const compatVersion = compatMap[platformName]\n      if (versionIsAbove(version, compatVersion)) {\n        pluginNames.push(pluginName)\n      }\n    })\n  })\n\n  return platformCompatMap\n}\n\nconst getPlatformNames = (plugins) => {\n  const names = []\n  plugins.forEach(({ compatMap }) => {\n    Object.keys(compatMap).forEach((platformName) => {\n      if (names.indexOf(platformName) === -1) {\n        names.push(platformName)\n      }\n    })\n  })\n  return names\n}\n\n/*\nit returns\n[\n\t{\n\t\tfeatures: ['transform-template-literals'],\n\t\tplatforms: {\n\t\t\tchrome: [44, 45]\n\t\t},\n\t},\n\t{\n\t\tfeatures: ['transform-template-literals', 'transform-literals'],\n\t\tplatforms: {\n\t\t\tchrome: [44]\n\t\t},\n\t},\n}\n*/\nexport const generateGroupForPlugins = (plugins) => {\n  const platformAndCompatMap = PLATFORM_NAMES.map((platformName) => {\n    return {\n      platformName,\n      platformCompatMap: getPlatformCompatMap(plugins, platformName),\n    }\n  })\n\n  const groups = []\n  platformAndCompatMap.forEach(({ platformName, platformCompatMap }) => {\n    Object.keys(platformCompatMap).forEach((version) => {\n      const pluginNames = platformCompatMap[version].sort()\n      const existingGroup = groups.find((group) => {\n        return group.pluginNames.join(\"\") === pluginNames.join(\"\")\n      })\n      if (existingGroup) {\n        const groupCompatMap = existingGroup.compatMap\n        if (platformName in groupCompatMap) {\n          groupCompatMap[platformName].push(version)\n        } else {\n          groupCompatMap[platformName] = [version]\n        }\n      } else {\n        groups.push({\n          pluginNames,\n          compatMap: { [platformName]: [version] },\n        })\n      }\n    })\n  })\n\n  return groups\n}\n","import { versionIsAbove } from \"./versionCompare.js\"\n\nconst mergePluginNames = (pluginList, secondPluginList) => {\n  return [...pluginList, ...secondPluginList.filter((plugin) => pluginList.indexOf(plugin) === -1)]\n}\n\nconst removeFromArray = (array, value) => {\n  const index = array.indexOf(value)\n  if (index > -1) {\n    array.splice(index, 1)\n  }\n}\n\nconst getChunkSizes = (array, size) => {\n  let i = 0\n  const chunkSize = Math.ceil(array.length / size)\n  const chunkSizes = []\n  while (i < array.length) {\n    if (i + chunkSize > array.length) {\n      const chunkSize = array.length - i\n      i += chunkSize\n      chunkSizes.push(chunkSize)\n    } else {\n      i += chunkSize\n      chunkSizes.push(chunkSize)\n    }\n  }\n  return chunkSizes\n}\n\nexport const limitGroup = (groups, getScoreForGroup, count = 4) => {\n  let i = 0\n  const chunkSizes = getChunkSizes(groups, count).reverse()\n  const finalGroups = []\n  let remainingGroups = groups\n\n  while (i < chunkSizes.length) {\n    const sortedRemainingGroups = remainingGroups\n      .sort((a, b) => getScoreForGroup(a) - getScoreForGroup(b))\n      .reverse()\n    const groupsToMerge = sortedRemainingGroups.slice(0, chunkSizes[i])\n    const mergedGroup = groupsToMerge.reduce(\n      // eslint-disable-next-line no-loop-func\n      (previous, group, index) => {\n        const result = {}\n        result.pluginNames = mergePluginNames(previous.pluginNames, group.pluginNames)\n        const mergedCompatMap = { ...previous.compatMap }\n        Object.keys(group.compatMap).forEach((platformName) => {\n          const versions = group.compatMap[platformName]\n          versions.forEach((platformVersion) => {\n            let merged = false\n            if (platformName in mergedCompatMap) {\n              const highestVersion = mergedCompatMap[platformName]\n              if (versionIsAbove(platformVersion, highestVersion)) {\n                mergedCompatMap[platformName] = String(platformVersion)\n                merged = true\n              }\n            } else {\n              mergedCompatMap[platformName] = String(platformVersion)\n              merged = true\n            }\n            if (merged) {\n              sortedRemainingGroups.slice(index + 1).forEach((nextGroup) => {\n                if (platformName in nextGroup.compatMap) {\n                  removeFromArray(nextGroup.compatMap[platformName], platformVersion)\n                }\n              })\n            }\n          })\n        })\n        result.compatMap = mergedCompatMap\n        return result\n      },\n      {\n        pluginNames: [],\n        compatMap: {},\n      },\n    )\n    finalGroups.push(mergedGroup)\n    remainingGroups = sortedRemainingGroups.slice(chunkSizes[i])\n    i++\n  }\n\n  return finalGroups\n}\n","import { versionIsAbove } from \"./versionCompare.js\"\n\nconst createGetScoreFromVersionUsage = (stats) => {\n  const versionNames = Object.keys(stats)\n  if (versionNames.length === 0) {\n    return () => null\n  }\n  const sortedVersions = versionNames\n    .sort((versionA, versionB) => versionIsAbove(versionA, versionB))\n    .reverse()\n  const highestVersion = sortedVersions.shift()\n\n  return (platformVersion) => {\n    if (platformVersion === highestVersion || versionIsAbove(platformVersion, highestVersion)) {\n      return stats[highestVersion]\n    }\n    const closestVersion = sortedVersions.find((version) => {\n      return platformVersion === version || versionIsAbove(platformVersion, version)\n    })\n    return closestVersion ? stats[closestVersion] : null\n  }\n}\n\nconst createGetScoreFromPlatformUsage = (stats) => {\n  const platformNames = Object.keys(stats)\n  const scoreMap = {}\n  platformNames.forEach((platformName) => {\n    scoreMap[platformName] = createGetScoreFromVersionUsage(stats[platformName])\n  })\n  return (platformName, platformVersion) => {\n    if (platformName in scoreMap) {\n      const versionUsage = scoreMap[platformName](platformVersion)\n      return versionUsage === null ? stats.other : versionUsage\n    }\n    return stats.other\n  }\n}\n\nexport const createGetScoreForGroupCompatMap = (stats) => {\n  const getScoreFromPlatformUsage = createGetScoreFromPlatformUsage(stats)\n\n  const getPlatformScore = (platformName, versions) => {\n    return versions.reduce((previous, version) => {\n      return previous + getScoreFromPlatformUsage(platformName, version)\n    }, 0)\n  }\n\n  const getScore = (groupCompatMap) => {\n    return Object.keys(groupCompatMap).reduce((previous, platformName) => {\n      return previous + getPlatformScore(platformName, groupCompatMap[platformName])\n    }, 0)\n  }\n\n  return getScore\n}\n","// https://github.com/babel/babel/blob/master/packages/babel-preset-env/data/plugins.json\n\nimport { generateGroupForPlugins } from \"./generateGroupForPlugins.js\"\nimport { limitGroup } from \"./limitGroup.js\"\nimport { createGetScoreForGroupCompatMap } from \"./createGetScoreForGroupCompatMap.js\"\nimport { versionIsBelow } from \"./versionCompare.js\"\nimport availablePlugins from \"@babel/preset-env/lib/available-plugins.js\"\n\nconst defaultPluginsData = require(\"@babel/preset-env/data/plugins.json\")\n\nconst defaultStats = {\n  chrome: {\n    \"51\": 0.6,\n    \"44\": 0.01,\n  },\n  firefox: {\n    \"53\": 0.6,\n    \"0\": 0.1, // it means oldest version of firefox will get a score of 0.1\n  },\n  edge: {\n    \"12\": 0.1,\n    \"0\": 0.001,\n  },\n  safari: {\n    \"10\": 0.1,\n    \"0\": 0.001,\n  },\n  node: {\n    \"8\": 0.5,\n    \"0\": 0.001,\n  },\n  other: 0.001,\n}\n\nexport const createGetGroupForPlatform = (\n  {\n    stats = defaultStats,\n    requiredPluginNames = Object.keys(availablePlugins),\n    pluginsData = defaultPluginsData,\n    size = 4,\n    moduleOutput,\n  } = {},\n) => {\n  const plugins = Object.keys(pluginsData)\n    .filter((pluginName) => {\n      return requiredPluginNames.indexOf(pluginName) > -1\n    })\n    .map((pluginName) => {\n      return {\n        pluginName,\n        compatMap: pluginsData[pluginName],\n      }\n    })\n\n  // hardcode that nothing supports module for now\n  // of course we would like to use\n  // https://github.com/babel/babel/blob/090c364a90fe73d36a30707fc612ce037bdbbb24/packages/babel-preset-env/data/built-in-modules.json#L1\n  // but let's force it for now\n  // and once everything works fine we'll test how it behaves with native modules\n  if (moduleOutput === \"commonjs\") {\n    plugins.push({\n      pluginName: \"transform-modules-commonjs\",\n      compatMap: {},\n    })\n  }\n  if (moduleOutput === \"systemjs\") {\n    plugins.push({\n      pluginName: \"transform-modules-systemjs\",\n      compatMap: {},\n    })\n  }\n\n  const groupWithEverything = {\n    pluginNames: plugins.map(({ pluginName }) => pluginName),\n    plugins: plugins.map(({ pluginName }) => availablePlugins[pluginName]),\n    compatMap: {},\n  }\n\n  const groupWithNothing = {\n    pluginNames: [],\n    plugins: [],\n    compatMap: {},\n  }\n\n  const allGroups = generateGroupForPlugins(plugins)\n  const getScoreForGroupCompatMap = createGetScoreForGroupCompatMap(stats)\n  const groups = limitGroup(\n    allGroups,\n    ({ compatMap }) => getScoreForGroupCompatMap(compatMap),\n    size,\n  )\n\n  const getGroupForPlatform = ({ platformName, platformVersion }) => {\n    const platformIsUnknown = groups.every(({ compatMap }) => platformName in compatMap === false)\n    if (platformIsUnknown) {\n      return groupWithEverything\n    }\n\n    const groupWithVersionAbovePlatformVersion = groups.find(({ compatMap }) => {\n      if (platformName in compatMap === false) {\n        return false\n      }\n      return versionIsBelow(platformVersion, compatMap[platformName])\n    })\n    if (groupWithVersionAbovePlatformVersion) {\n      return {\n        ...groupWithVersionAbovePlatformVersion,\n        plugins: groupWithVersionAbovePlatformVersion.pluginNames.map(\n          (name) => availablePlugins[name],\n        ),\n      }\n    }\n    return groupWithNothing\n  }\n\n  return {\n    getGroupForPlatform,\n    getAllGroup: () => [groupWithEverything, ...groups, groupWithNothing],\n  }\n}\n","import path from \"path\"\nimport { createFileStructure } from \"@dmail/project-structure\"\nimport { getFileContentAsString } from \"./getFileContentAsString.js\"\nimport { writeFileFromString } from \"./writeFileFromString.js\"\nimport { createGetGroupForPlatform } from \"./createGetGroup/createGetGroupForPlatform.js\"\n\nconst { transformAsync } = require(\"@babel/core\") // rollup fails if using import here\n\nexport const compileFileStructure = ({\n  root,\n  config = \"structure.config.js\",\n  predicate = ({ compile }) => compile,\n  into = \"dist\",\n  platformName = \"node\",\n  platformVersion = \"8.0\",\n  moduleOutput = \"commonjs\",\n}) => {\n  const { getGroupForPlatform } = createGetGroupForPlatform({\n    moduleOutput,\n  })\n\n  const { plugins } = getGroupForPlatform({\n    platformName,\n    platformVersion,\n  })\n\n  const transpile = ({ code, filename, sourceFileName }) => {\n    return transformAsync(code, {\n      plugins,\n      filename,\n      sourceMaps: true,\n      sourceFileName,\n    })\n  }\n\n  const compileAndWrite = ({ absoluteName, relativeName }) => {\n    return getFileContentAsString(absoluteName).then((source) => {\n      const buildRelativeName = `${into}/${relativeName}`\n      const buildLocation = `${root}/${buildRelativeName}`\n      const sourceMapName = `${path.basename(relativeName)}.map`\n      const sourceMapLocationForSource = `${sourceMapName}`\n      const sourceMapLocation = `${root}/${into}/${relativeName}.map`\n      const sourceNameForSourceMap = path.relative(path.dirname(sourceMapLocation), absoluteName)\n\n      return transpile({\n        code: source,\n        filename: absoluteName,\n        sourceFileName: sourceNameForSourceMap,\n      })\n        .then(({ code, map }) => {\n          if (map) {\n            code = `${code}\n//# sourceMappingURL=${sourceMapLocationForSource}`\n            return Promise.all([\n              writeFileFromString(buildLocation, code),\n              writeFileFromString(sourceMapLocation, JSON.stringify(map, null, \"  \")),\n            ])\n          }\n\n          return writeFileFromString(buildLocation, code)\n        })\n        .then(() => {\n          console.log(`${relativeName} -> ${buildRelativeName} `)\n        })\n    })\n  }\n\n  return createFileStructure({ root, config }).then(({ forEachFileMatching }) => {\n    return forEachFileMatching(predicate, compileAndWrite)\n  })\n}\n"],"names":["sequence","require","getFileLStat","path","Promise","resolve","reject","fs","lstat","error","status","reason","code","createFolder","location","mkdir","then","stat","isDirectory","normalizeSeparation","filename","replace","createFolderUntil","pathStartsWithSlash","slice","folders","split","pop","map","_","index","folderLocation","join","writeFileFromString","content","writeFile","getFileContentAsString","readFile","buffer","toString","semver","version","major","minor","patch","parts","Number","TypeError","compareVersion","versionA","versionB","semanticVersionA","semanticVersionB","majorDiff","minorDiff","patchDiff","versionIsAbove","versionSupposedAbove","versionSupposedBelow","versionIsBelow","PLATFORM_NAMES","getPlatformCompatMap","plugins","platformName","platformCompatMap","forEach","pluginName","compatMap","compatVersion","push","Infinity","Object","keys","pluginNames","indexOf","generateGroupForPlugins","platformAndCompatMap","groups","sort","existingGroup","find","group","groupCompatMap","mergePluginNames","pluginList","secondPluginList","filter","plugin","removeFromArray","array","value","splice","getChunkSizes","size","i","chunkSize","Math","ceil","length","chunkSizes","limitGroup","getScoreForGroup","count","reverse","finalGroups","remainingGroups","sortedRemainingGroups","a","b","groupsToMerge","mergedGroup","reduce","previous","result","mergedCompatMap","versions","platformVersion","merged","highestVersion","String","nextGroup","createGetScoreFromVersionUsage","stats","versionNames","sortedVersions","shift","closestVersion","createGetScoreFromPlatformUsage","platformNames","scoreMap","versionUsage","other","createGetScoreForGroupCompatMap","getScoreFromPlatformUsage","getPlatformScore","getScore","defaultPluginsData","defaultStats","chrome","firefox","edge","safari","node","createGetGroupForPlatform","requiredPluginNames","availablePlugins","pluginsData","moduleOutput","groupWithEverything","groupWithNothing","allGroups","getScoreForGroupCompatMap","getGroupForPlatform","platformIsUnknown","every","groupWithVersionAbovePlatformVersion","name","getAllGroup","transformAsync","compileFileStructure","root","config","predicate","compile","into","transpile","sourceFileName","sourceMaps","compileAndWrite","absoluteName","relativeName","source","buildRelativeName","buildLocation","sourceMapName","basename","sourceMapLocationForSource","sourceMapLocation","sourceNameForSourceMap","relative","dirname","all","JSON","stringify","console","log","createFileStructure","forEachFileMatching"],"mappings":";;;;;;;;;;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;;AAEA,MAAMC,YAAY,GAAIC,OAAD,IAAU;SACtB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCC,EAAE,CAACC,KAAH,CAASL,OAAT,EAAe,CAACM,KAAD,EAAQD,KAAR,KAAkB;UAC3BC,KAAJ,EAAW;QACTH,MAAM,CAAC;UAAEI,MAAM,EAAE,GAAV;UAAeC,MAAM,EAAEF,KAAK,CAACG;SAA9B,CAAN;OADF,MAEO;QACLP,OAAO,CAACG,KAAD,CAAP;;KAJJ;GADK,CAAP;CADF;;AAYA,MAAMK,YAAY,GAAG,CAAC;EAAEC;CAAH,KAAkB;SAC9B,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCC,EAAE,CAACQ,KAAH,CAASD,QAAT,EAAoBL,KAAD,IAAW;UACxBA,KAAJ,EAAW;;YAELA,KAAK,CAACG,IAAN,KAAe,QAAnB,EAA6B;UAC3BV,YAAY,CAACY,QAAD,CAAZ,CAAuBE,IAAvB,CAA6BC,IAAD,IAAU;gBAChCA,IAAI,CAACC,WAAL,EAAJ,EAAwB;cACtBb,OAAO;aADT,MAEO;cACLC,MAAM,CAAC;gBAAEI,MAAM,EAAE,GAAV;gBAAeC,MAAM,EAAE;eAAxB,CAAN;;WAJJ;SADF,MAQO;UACLL,MAAM,CAAC;YAAEI,MAAM,EAAE,GAAV;YAAeC,MAAM,EAAEF,KAAK,CAACG;WAA9B,CAAN;;OAXJ,MAaO;QACLP,OAAO;;KAfX;GADK,CAAP;CADF;;AAuBA,MAAMc,mBAAmB,GAAIC,QAAD,IAAcA,QAAQ,CAACC,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAA1C;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;EAAER;CAAH,KAAkB;MACtCX,OAAI,GAAGgB,mBAAmB,CAACL,QAAD,CAA9B,CAD0C;;;;QAKpCS,mBAAmB,GAAGpB,OAAI,CAAC,CAAD,CAAJ,KAAY,GAAxC;;MACIoB,mBAAJ,EAAyB;IACvBpB,OAAI,GAAGA,OAAI,CAACqB,KAAL,CAAW,CAAX,CAAP;;;QAEIC,OAAO,GAAGtB,OAAI,CAACuB,KAAL,CAAW,GAAX,CAAhB;EAEAD,OAAO,CAACE,GAAR;SAEO3B,QAAQ,CACbyB,OAAO,CAACG,GAAR,CAAY,CAACC,CAAD,EAAIC,KAAJ,KAAc;WACjB,MAAM;YACLC,cAAc,GAAGN,OAAO,CAACD,KAAR,CAAc,CAAd,EAAiBM,KAAK,GAAG,CAAzB,EAA4BE,IAA5B,CAAiC,GAAjC,CAAvB;aACOnB,YAAY,CAAC;QAClBC,QAAQ,EAAG,GAAES,mBAAmB,GAAG,GAAH,GAAS,EAAG,GAAEQ,cAAe;OAD5C,CAAnB;KAFF;GADF,CADa,CAAf;CAbF;;AAyBA,MAAaE,mBAAmB,GAAG,CAACnB,QAAD,EAAWoB,OAAX,KAAuB;SACjDZ,iBAAiB,CAAC;IAAER;GAAH,CAAjB,CAAgCE,IAAhC,CAAqC,MAAM;WACzC,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtCC,EAAE,CAAC4B,SAAH,CAAarB,QAAb,EAAuBoB,OAAvB,EAAiCzB,KAAD,IAAW;YACrCA,KAAJ,EAAW;UACTH,MAAM,CAACG,KAAD,CAAN;SADF,MAEO;UACLJ,OAAO;;OAJX;KADK,CAAP;GADK,CAAP;CADK;;AChEA,MAAM+B,sBAAsB,GAAItB,QAAD,IACpC,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAC/BC,EAAE,CAAC8B,QAAH,CAAYvB,QAAZ,EAAsB,CAACL,KAAD,EAAQ6B,MAAR,KAAmB;QACnC7B,KAAJ,EAAW;MACTH,MAAM,CAACG,KAAD,CAAN;KADF,MAEO;MACLJ,OAAO,CAACiC,MAAM,CAACC,QAAP,EAAD,CAAP;;GAJJ;CADF,CADK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFP,MAAMC,MAAM,GAAIC,OAAD,IAAa;MACtB,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;WACxB;MACLC,KAAK,EAAED,OADF;MAELE,KAAK,EAAE,CAFF;MAGLC,KAAK,EAAE;KAHT;;;MAME,OAAOH,OAAP,KAAmB,QAAvB,EAAiC;UACzBI,KAAK,GAAGJ,OAAO,CAACf,KAAR,CAAc,GAAd,CAAd;WACO;MACLgB,KAAK,EAAEI,MAAM,CAACD,KAAK,CAAC,CAAD,CAAN,CADR;MAELF,KAAK,EAAEE,KAAK,CAAC,CAAD,CAAL,GAAWC,MAAM,CAACD,KAAK,CAAC,CAAD,CAAN,CAAjB,GAA8B,CAFhC;MAGLD,KAAK,EAAEC,KAAK,CAAC,CAAD,CAAL,GAAWC,MAAM,CAACD,KAAK,CAAC,CAAD,CAAN,CAAjB,GAA8B;KAHvC;;;QAMI,IAAIE,SAAJ,CAAe,8CAA6C,OAAON,OAAQ,EAA3E,CAAN;CAhBF;;AAmBA,AAAO,MAAMO,cAAc,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;QAC9CC,gBAAgB,GAAGX,MAAM,CAACS,QAAD,CAA/B;QACMG,gBAAgB,GAAGZ,MAAM,CAACU,QAAD,CAA/B;QAEMG,SAAS,GAAGF,gBAAgB,CAACT,KAAjB,GAAyBU,gBAAgB,CAACV,KAA5D;;MACIW,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;MAEEA,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;QAGIC,SAAS,GAAGH,gBAAgB,CAACR,KAAjB,GAAyBS,gBAAgB,CAACT,KAA5D;;MACIW,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;MAEEA,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;QAGIC,SAAS,GAAGJ,gBAAgB,CAACP,KAAjB,GAAyBQ,gBAAgB,CAACR,KAA5D;;MACIW,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;MAEEA,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;SAGK,CAAP;CA5BK;AA+BP,MAAaC,cAAc,GAAG,CAACC,oBAAD,EAAuBC,oBAAvB,KAAgD;SACrEV,cAAc,CAACS,oBAAD,EAAuBC,oBAAvB,CAAd,GAA6D,CAApE;CADK;AAIP,MAAaC,cAAc,GAAG,CAACD,oBAAD,EAAuBD,oBAAvB,KAAgD;SACrET,cAAc,CAACU,oBAAD,EAAuBD,oBAAvB,CAAd,GAA6D,CAApE;CADK;;ACpDP,MAAMG,cAAc,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB,EAA8B,QAA9B,EAAwC,MAAxC,EAAgD,KAAhD,EAAuD,OAAvD,EAAgE,UAAhE,CAAvB;;;;;;;;;AASA,MAAMC,oBAAoB,GAAG,CAACC,OAAD,EAAUC,YAAV,KAA2B;QAChDC,iBAAiB,GAAG,EAA1B;EAEAF,OAAO,CAACG,OAAR,CAAgB,CAAC;IAAEC,UAAF;IAAcC;GAAf,KAA+B;QACzCJ,YAAY,IAAII,SAApB,EAA+B;YACvBC,aAAa,GAAGD,SAAS,CAACJ,YAAD,CAA/B;;UACIK,aAAa,IAAIJ,iBAArB,EAAwC;QACtCA,iBAAiB,CAACI,aAAD,CAAjB,CAAiCC,IAAjC,CAAsCH,UAAtC;OADF,MAEO;QACLF,iBAAiB,CAACI,aAAD,CAAjB,GAAmC,CAACF,UAAD,CAAnC;;KALJ,MAOO;MACLF,iBAAiB,CAACM,QAAlB,GAA6B,CAACJ,UAAD,CAA7B;;GATJ,EAHsD;;EAiBtDK,MAAM,CAACC,IAAP,CAAYR,iBAAZ,EAA+BC,OAA/B,CAAwCxB,OAAD,IAAa;UAC5CgC,WAAW,GAAGT,iBAAiB,CAACvB,OAAD,CAArC;IACAqB,OAAO,CAACG,OAAR,CAAgB,CAAC;MAAEC,UAAF;MAAcC;KAAf,KAA+B;UACzCM,WAAW,CAACC,OAAZ,CAAoBR,UAApB,IAAkC,CAAC,CAAvC,EAA0C;UACtCH,YAAY,IAAII,SAAhB,KAA8B,KAAlC,EAAyC;YAEnCC,aAAa,GAAGD,SAAS,CAACJ,YAAD,CAA/B;;UACIP,cAAc,CAACf,OAAD,EAAU2B,aAAV,CAAlB,EAA4C;QAC1CK,WAAW,CAACJ,IAAZ,CAAiBH,UAAjB;;KANJ;GAFF;SAaOF,iBAAP;CA9BF;AA6CA;;;;;;;;;;;;;;;;;;;AAiBA,AAAO,MAAMW,uBAAuB,GAAIb,OAAD,IAAa;QAC5Cc,oBAAoB,GAAGhB,cAAc,CAAChC,GAAf,CAAoBmC,YAAD,IAAkB;WACzD;MACLA,YADK;MAELC,iBAAiB,EAAEH,oBAAoB,CAACC,OAAD,EAAUC,YAAV;KAFzC;GAD2B,CAA7B;QAOMc,MAAM,GAAG,EAAf;EACAD,oBAAoB,CAACX,OAArB,CAA6B,CAAC;IAAEF,YAAF;IAAgBC;GAAjB,KAAyC;IACpEO,MAAM,CAACC,IAAP,CAAYR,iBAAZ,EAA+BC,OAA/B,CAAwCxB,OAAD,IAAa;YAC5CgC,WAAW,GAAGT,iBAAiB,CAACvB,OAAD,CAAjB,CAA2BqC,IAA3B,EAApB;YACMC,aAAa,GAAGF,MAAM,CAACG,IAAP,CAAaC,KAAD,IAAW;eACpCA,KAAK,CAACR,WAAN,CAAkBzC,IAAlB,CAAuB,EAAvB,MAA+ByC,WAAW,CAACzC,IAAZ,CAAiB,EAAjB,CAAtC;OADoB,CAAtB;;UAGI+C,aAAJ,EAAmB;cACXG,cAAc,GAAGH,aAAa,CAACZ,SAArC;;YACIJ,YAAY,IAAImB,cAApB,EAAoC;UAClCA,cAAc,CAACnB,YAAD,CAAd,CAA6BM,IAA7B,CAAkC5B,OAAlC;SADF,MAEO;UACLyC,cAAc,CAACnB,YAAD,CAAd,GAA+B,CAACtB,OAAD,CAA/B;;OALJ,MAOO;QACLoC,MAAM,CAACR,IAAP,CAAY;UACVI,WADU;UAEVN,SAAS,EAAE;aAAGJ,YAAD,GAAgB,CAACtB,OAAD;;SAF/B;;KAbJ;GADF;SAsBOoC,MAAP;CA/BK;;ACvEP,MAAMM,gBAAgB,GAAG,CAACC,UAAD,EAAaC,gBAAb,KAAkC;4BAC9CD,UAAX,4BAA0BC,gBAAgB,CAACC,MAAjB,CAAyBC,MAAD,IAAYH,UAAU,CAACV,OAAX,CAAmBa,MAAnB,MAA+B,CAAC,CAApE,CAA1B;CADF;;AAIA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;QAClC5D,KAAK,GAAG2D,KAAK,CAACf,OAAN,CAAcgB,KAAd,CAAd;;MACI5D,KAAK,GAAG,CAAC,CAAb,EAAgB;IACd2D,KAAK,CAACE,MAAN,CAAa7D,KAAb,EAAoB,CAApB;;CAHJ;;AAOA,MAAM8D,aAAa,GAAG,CAACH,KAAD,EAAQI,IAAR,KAAiB;MACjCC,CAAC,GAAG,CAAR;QACMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUR,KAAK,CAACS,MAAN,GAAeL,IAAzB,CAAlB;QACMM,UAAU,GAAG,EAAnB;;SACOL,CAAC,GAAGL,KAAK,CAACS,MAAjB,EAAyB;QACnBJ,CAAC,GAAGC,SAAJ,GAAgBN,KAAK,CAACS,MAA1B,EAAkC;YAC1BH,SAAS,GAAGN,KAAK,CAACS,MAAN,GAAeJ,CAAjC;MACAA,CAAC,IAAIC,SAAL;MACAI,UAAU,CAAC9B,IAAX,CAAgB0B,SAAhB;KAHF,MAIO;MACLD,CAAC,IAAIC,SAAL;MACAI,UAAU,CAAC9B,IAAX,CAAgB0B,SAAhB;;;;SAGGI,UAAP;CAdF;;AAiBA,MAAaC,UAAU,GAAG,CAACvB,MAAD,EAASwB,gBAAT,EAA2BC,KAAK,GAAG,CAAnC,KAAyC;MAC7DR,CAAC,GAAG,CAAR;QACMK,UAAU,GAAGP,aAAa,CAACf,MAAD,EAASyB,KAAT,CAAb,CAA6BC,OAA7B,EAAnB;QACMC,WAAW,GAAG,EAApB;MACIC,eAAe,GAAG5B,MAAtB;;SAEOiB,CAAC,GAAGK,UAAU,CAACD,MAAtB,EAA8B;UACtBQ,qBAAqB,GAAGD,eAAe,CAC1C3B,IAD2B,CACtB,CAAC6B,CAAD,EAAIC,CAAJ,KAAUP,gBAAgB,CAACM,CAAD,CAAhB,GAAsBN,gBAAgB,CAACO,CAAD,CAD1B,EAE3BL,OAF2B,EAA9B;UAGMM,aAAa,GAAGH,qBAAqB,CAAClF,KAAtB,CAA4B,CAA5B,EAA+B2E,UAAU,CAACL,CAAD,CAAzC,CAAtB;UACMgB,WAAW,GAAGD,aAAa,CAACE,MAAd;KAEjBC,QAAD,EAAW/B,KAAX,EAAkBnD,KAAlB,KAA4B;YACpBmF,MAAM,GAAG,EAAf;MACAA,MAAM,CAACxC,WAAP,GAAqBU,gBAAgB,CAAC6B,QAAQ,CAACvC,WAAV,EAAuBQ,KAAK,CAACR,WAA7B,CAArC;;YACMyC,eAAe,qBAAQF,QAAQ,CAAC7C,SAAjB,CAArB;;MACAI,MAAM,CAACC,IAAP,CAAYS,KAAK,CAACd,SAAlB,EAA6BF,OAA7B,CAAsCF,YAAD,IAAkB;cAC/CoD,QAAQ,GAAGlC,KAAK,CAACd,SAAN,CAAgBJ,YAAhB,CAAjB;QACAoD,QAAQ,CAAClD,OAAT,CAAkBmD,eAAD,IAAqB;cAChCC,MAAM,GAAG,KAAb;;cACItD,YAAY,IAAImD,eAApB,EAAqC;kBAC7BI,cAAc,GAAGJ,eAAe,CAACnD,YAAD,CAAtC;;gBACIP,cAAc,CAAC4D,eAAD,EAAkBE,cAAlB,CAAlB,EAAqD;cACnDJ,eAAe,CAACnD,YAAD,CAAf,GAAgCwD,MAAM,CAACH,eAAD,CAAtC;cACAC,MAAM,GAAG,IAAT;;WAJJ,MAMO;YACLH,eAAe,CAACnD,YAAD,CAAf,GAAgCwD,MAAM,CAACH,eAAD,CAAtC;YACAC,MAAM,GAAG,IAAT;;;cAEEA,MAAJ,EAAY;YACVX,qBAAqB,CAAClF,KAAtB,CAA4BM,KAAK,GAAG,CAApC,EAAuCmC,OAAvC,CAAgDuD,SAAD,IAAe;kBACxDzD,YAAY,IAAIyD,SAAS,CAACrD,SAA9B,EAAyC;gBACvCqB,eAAe,CAACgC,SAAS,CAACrD,SAAV,CAAoBJ,YAApB,CAAD,EAAoCqD,eAApC,CAAf;;aAFJ;;SAbJ;OAFF;MAuBAH,MAAM,CAAC9C,SAAP,GAAmB+C,eAAnB;aACOD,MAAP;KA9BgB,EAgClB;MACExC,WAAW,EAAE,EADf;MAEEN,SAAS,EAAE;KAlCK,CAApB;IAqCAqC,WAAW,CAACnC,IAAZ,CAAiByC,WAAjB;IACAL,eAAe,GAAGC,qBAAqB,CAAClF,KAAtB,CAA4B2E,UAAU,CAACL,CAAD,CAAtC,CAAlB;IACAA,CAAC;;;SAGIU,WAAP;CArDK;;AC5BP,MAAMiB,8BAA8B,GAAIC,KAAD,IAAW;QAC1CC,YAAY,GAAGpD,MAAM,CAACC,IAAP,CAAYkD,KAAZ,CAArB;;MACIC,YAAY,CAACzB,MAAb,KAAwB,CAA5B,EAA+B;WACtB,MAAM,IAAb;;;QAEI0B,cAAc,GAAGD,YAAY,CAChC7C,IADoB,CACf,CAAC7B,QAAD,EAAWC,QAAX,KAAwBM,cAAc,CAACP,QAAD,EAAWC,QAAX,CADvB,EAEpBqD,OAFoB,EAAvB;QAGMe,cAAc,GAAGM,cAAc,CAACC,KAAf,EAAvB;SAEQT,eAAD,IAAqB;QACtBA,eAAe,KAAKE,cAApB,IAAsC9D,cAAc,CAAC4D,eAAD,EAAkBE,cAAlB,CAAxD,EAA2F;aAClFI,KAAK,CAACJ,cAAD,CAAZ;;;UAEIQ,cAAc,GAAGF,cAAc,CAAC5C,IAAf,CAAqBvC,OAAD,IAAa;aAC/C2E,eAAe,KAAK3E,OAApB,IAA+Be,cAAc,CAAC4D,eAAD,EAAkB3E,OAAlB,CAApD;KADqB,CAAvB;WAGOqF,cAAc,GAAGJ,KAAK,CAACI,cAAD,CAAR,GAA2B,IAAhD;GAPF;CAVF;;AAqBA,MAAMC,+BAA+B,GAAIL,KAAD,IAAW;QAC3CM,aAAa,GAAGzD,MAAM,CAACC,IAAP,CAAYkD,KAAZ,CAAtB;QACMO,QAAQ,GAAG,EAAjB;EACAD,aAAa,CAAC/D,OAAd,CAAuBF,YAAD,IAAkB;IACtCkE,QAAQ,CAAClE,YAAD,CAAR,GAAyB0D,8BAA8B,CAACC,KAAK,CAAC3D,YAAD,CAAN,CAAvD;GADF;SAGO,CAACA,YAAD,EAAeqD,eAAf,KAAmC;QACpCrD,YAAY,IAAIkE,QAApB,EAA8B;YACtBC,YAAY,GAAGD,QAAQ,CAAClE,YAAD,CAAR,CAAuBqD,eAAvB,CAArB;aACOc,YAAY,KAAK,IAAjB,GAAwBR,KAAK,CAACS,KAA9B,GAAsCD,YAA7C;;;WAEKR,KAAK,CAACS,KAAb;GALF;CANF;;AAeA,MAAaC,+BAA+B,GAAIV,KAAD,IAAW;QAClDW,yBAAyB,GAAGN,+BAA+B,CAACL,KAAD,CAAjE;;QAEMY,gBAAgB,GAAG,CAACvE,YAAD,EAAeoD,QAAf,KAA4B;WAC5CA,QAAQ,CAACJ,MAAT,CAAgB,CAACC,QAAD,EAAWvE,OAAX,KAAuB;aACrCuE,QAAQ,GAAGqB,yBAAyB,CAACtE,YAAD,EAAetB,OAAf,CAA3C;KADK,EAEJ,CAFI,CAAP;GADF;;QAMM8F,QAAQ,GAAIrD,cAAD,IAAoB;WAC5BX,MAAM,CAACC,IAAP,CAAYU,cAAZ,EAA4B6B,MAA5B,CAAmC,CAACC,QAAD,EAAWjD,YAAX,KAA4B;aAC7DiD,QAAQ,GAAGsB,gBAAgB,CAACvE,YAAD,EAAemB,cAAc,CAACnB,YAAD,CAA7B,CAAlC;KADK,EAEJ,CAFI,CAAP;GADF;;SAMOwE,QAAP;CAfK;;AC9BP,MAAMC,kBAAkB,GAAGvI,OAAO,CAAC,qCAAD,CAAlC;;AAEA,MAAMwI,YAAY,GAAG;EACnBC,MAAM,EAAE;UACA,GADA;UAEA;GAHW;EAKnBC,OAAO,EAAE;UACD,GADC;SAEF,GAFE;;GALU;EASnBC,IAAI,EAAE;UACE,GADF;SAEC;GAXY;EAanBC,MAAM,EAAE;UACA,GADA;SAED;GAfY;EAiBnBC,IAAI,EAAE;SACC,GADD;SAEC;GAnBY;EAqBnBX,KAAK,EAAE;CArBT;AAwBA,MAAaY,yBAAyB,GAAG,CACvC;EACErB,KAAK,GAAGe,YADV;EAEEO,mBAAmB,GAAGzE,MAAM,CAACC,IAAP,CAAYyE,gBAAZ,CAFxB;EAGEC,WAAW,GAAGV,kBAHhB;EAIE3C,IAAI,GAAG,CAJT;EAKEsD;IACE,EAPmC,KAQpC;QACGrF,OAAO,GAAGS,MAAM,CAACC,IAAP,CAAY0E,WAAZ,EACb5D,MADa,CACLpB,UAAD,IAAgB;WACf8E,mBAAmB,CAACtE,OAApB,CAA4BR,UAA5B,IAA0C,CAAC,CAAlD;GAFY,EAIbtC,GAJa,CAIRsC,UAAD,IAAgB;WACZ;MACLA,UADK;MAELC,SAAS,EAAE+E,WAAW,CAAChF,UAAD;KAFxB;GALY,CAAhB,CADG;;;;;;MAiBCiF,YAAY,KAAK,UAArB,EAAiC;IAC/BrF,OAAO,CAACO,IAAR,CAAa;MACXH,UAAU,EAAE,4BADD;MAEXC,SAAS,EAAE;KAFb;;;MAKEgF,YAAY,KAAK,UAArB,EAAiC;IAC/BrF,OAAO,CAACO,IAAR,CAAa;MACXH,UAAU,EAAE,4BADD;MAEXC,SAAS,EAAE;KAFb;;;QAMIiF,mBAAmB,GAAG;IAC1B3E,WAAW,EAAEX,OAAO,CAAClC,GAAR,CAAY,CAAC;MAAEsC;KAAH,KAAoBA,UAAhC,CADa;IAE1BJ,OAAO,EAAEA,OAAO,CAAClC,GAAR,CAAY,CAAC;MAAEsC;KAAH,KAAoB+E,gBAAgB,CAAC/E,UAAD,CAAhD,CAFiB;IAG1BC,SAAS,EAAE;GAHb;QAMMkF,gBAAgB,GAAG;IACvB5E,WAAW,EAAE,EADU;IAEvBX,OAAO,EAAE,EAFc;IAGvBK,SAAS,EAAE;GAHb;QAMMmF,SAAS,GAAG3E,uBAAuB,CAACb,OAAD,CAAzC;QACMyF,yBAAyB,GAAGnB,+BAA+B,CAACV,KAAD,CAAjE;QACM7C,MAAM,GAAGuB,UAAU,CACvBkD,SADuB,EAEvB,CAAC;IAAEnF;GAAH,KAAmBoF,yBAAyB,CAACpF,SAAD,CAFrB,EAGvB0B,IAHuB,CAAzB;;QAMM2D,mBAAmB,GAAG,CAAC;IAAEzF,YAAF;IAAgBqD;GAAjB,KAAuC;UAC3DqC,iBAAiB,GAAG5E,MAAM,CAAC6E,KAAP,CAAa,CAAC;MAAEvF;KAAH,KAAmBJ,YAAY,IAAII,SAAhB,KAA8B,KAA9D,CAA1B;;QACIsF,iBAAJ,EAAuB;aACdL,mBAAP;;;UAGIO,oCAAoC,GAAG9E,MAAM,CAACG,IAAP,CAAY,CAAC;MAAEb;KAAH,KAAmB;UACtEJ,YAAY,IAAII,SAAhB,KAA8B,KAAlC,EAAyC;eAChC,KAAP;;;aAEKR,cAAc,CAACyD,eAAD,EAAkBjD,SAAS,CAACJ,YAAD,CAA3B,CAArB;KAJ2C,CAA7C;;QAMI4F,oCAAJ,EAA0C;+BAEnCA,oCADL;QAEE7F,OAAO,EAAE6F,oCAAoC,CAAClF,WAArC,CAAiD7C,GAAjD,CACNgI,IAAD,IAAUX,gBAAgB,CAACW,IAAD,CADnB;;;;WAKNP,gBAAP;GApBF;;SAuBO;IACLG,mBADK;IAELK,WAAW,EAAE,OAAOT,mBAAP,4BAA+BvE,MAA/B,IAAuCwE,gBAAvC;GAFf;CAjFK;;AC5BP,MAAM;EAAES;IAAmB7J,OAAO,CAAC,aAAD,CAAlC;;;AAEA,MAAa8J,oBAAoB,GAAG,CAAC;EACnCC,IADmC;EAEnCC,MAAM,GAAG,qBAF0B;EAGnCC,SAAS,GAAG,CAAC;IAAEC;GAAH,KAAiBA,OAHM;EAInCC,IAAI,GAAG,MAJ4B;EAKnCrG,YAAY,GAAG,MALoB;EAMnCqD,eAAe,GAAG,KANiB;EAOnC+B,YAAY,GAAG;CAPmB,KAQ9B;QACE;IAAEK;MAAwBT,yBAAyB,CAAC;IACxDI;GADuD,CAAzD;QAIM;IAAErF;MAAY0F,mBAAmB,CAAC;IACtCzF,YADsC;IAEtCqD;GAFqC,CAAvC;;QAKMiD,SAAS,GAAG,CAAC;IAAEzJ,IAAF;IAAQQ,QAAR;IAAkBkJ;GAAnB,KAAwC;WACjDR,cAAc,CAAClJ,IAAD,EAAO;MAC1BkD,OAD0B;MAE1B1C,QAF0B;MAG1BmJ,UAAU,EAAE,IAHc;MAI1BD;KAJmB,CAArB;GADF;;QASME,eAAe,GAAG,CAAC;IAAEC,YAAF;IAAgBC;GAAjB,KAAoC;WACnDtI,sBAAsB,CAACqI,YAAD,CAAtB,CAAqCzJ,IAArC,CAA2C2J,MAAD,IAAY;YACrDC,iBAAiB,GAAI,GAAER,IAAK,IAAGM,YAAa,EAAlD;YACMG,aAAa,GAAI,GAAEb,IAAK,IAAGY,iBAAkB,EAAnD;YACME,aAAa,GAAI,GAAE3K,IAAI,CAAC4K,QAAL,CAAcL,YAAd,CAA4B,MAArD;YACMM,0BAA0B,GAAI,GAAEF,aAAc,EAApD;YACMG,iBAAiB,GAAI,GAAEjB,IAAK,IAAGI,IAAK,IAAGM,YAAa,MAA1D;YACMQ,sBAAsB,GAAG/K,IAAI,CAACgL,QAAL,CAAchL,IAAI,CAACiL,OAAL,CAAaH,iBAAb,CAAd,EAA+CR,YAA/C,CAA/B;aAEOJ,SAAS,CAAC;QACfzJ,IAAI,EAAE+J,MADS;QAEfvJ,QAAQ,EAAEqJ,YAFK;QAGfH,cAAc,EAAEY;OAHF,CAAT,CAKJlK,IALI,CAKC,CAAC;QAAEJ,IAAF;QAAQgB;OAAT,KAAmB;YACnBA,GAAJ,EAAS;UACPhB,IAAI,GAAI,GAAEA,IAAK;uBACJoK,0BAA2B,EADtC;iBAEO5K,OAAO,CAACiL,GAAR,CAAY,CACjBpJ,mBAAmB,CAAC4I,aAAD,EAAgBjK,IAAhB,CADF,EAEjBqB,mBAAmB,CAACgJ,iBAAD,EAAoBK,IAAI,CAACC,SAAL,CAAe3J,GAAf,EAAoB,IAApB,EAA0B,IAA1B,CAApB,CAFF,CAAZ,CAAP;;;eAMKK,mBAAmB,CAAC4I,aAAD,EAAgBjK,IAAhB,CAA1B;OAfG,EAiBJI,IAjBI,CAiBC,MAAM;QACVwK,OAAO,CAACC,GAAR,CAAa,GAAEf,YAAa,OAAME,iBAAkB,GAApD;OAlBG,CAAP;KARK,CAAP;GADF;;SAgCOc,oCAAmB,CAAC;IAAE1B,IAAF;IAAQC;GAAT,CAAnB,CAAsCjJ,IAAtC,CAA2C,CAAC;IAAE2K;GAAH,KAA6B;WACtEA,mBAAmB,CAACzB,SAAD,EAAYM,eAAZ,CAA1B;GADK,CAAP;CA3DK;;;;;;;;;;"}