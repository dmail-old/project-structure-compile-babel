{"version":3,"file":"index.js","sources":["../src/writeFileFromString.js","../src/getFileContentAsString.js","../src/createGetGroup/versionCompare.js","../src/createGetGroup/generateGroupFromCompatMap.js","../src/createGetGroup/limitGroup.js","../src/createGetGroup/createGetScoreForGroupCompatMap.js","../src/createGetGroup/createGetGroupForPlatform.js","../src/compileFileStructure.js"],"sourcesContent":["import fs from \"fs\"\n\nconst sequence = require(\"promise-sequential\") // rollup fails if using import here\n\nconst getFileLStat = (path) => {\n  return new Promise((resolve, reject) => {\n    fs.lstat(path, (error, lstat) => {\n      if (error) {\n        reject({ status: 500, reason: error.code })\n      } else {\n        resolve(lstat)\n      }\n    })\n  })\n}\n\nconst createFolder = ({ location }) => {\n  return new Promise((resolve, reject) => {\n    fs.mkdir(location, (error) => {\n      if (error) {\n        // au cas ou deux script essayent de crÃ©e un dossier peu importe qui y arrive c'est ok\n        if (error.code === \"EEXIST\") {\n          getFileLStat(location).then((stat) => {\n            if (stat.isDirectory()) {\n              resolve()\n            } else {\n              reject({ status: 500, reason: \"expect a directory\" })\n            }\n          })\n        } else {\n          reject({ status: 500, reason: error.code })\n        }\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\nconst normalizeSeparation = (filename) => filename.replace(/\\\\/g, \"/\")\n\nconst createFolderUntil = ({ location }) => {\n  let path = normalizeSeparation(location)\n  // remove first / in case path starts with / (linux)\n  // because it would create a \"\" entry in folders array below\n  // tryig to create a folder at \"\"\n  const pathStartsWithSlash = path[0] === \"/\"\n  if (pathStartsWithSlash) {\n    path = path.slice(1)\n  }\n  const folders = path.split(\"/\")\n\n  folders.pop()\n\n  return sequence(\n    folders.map((_, index) => {\n      return () => {\n        const folderLocation = folders.slice(0, index + 1).join(\"/\")\n        return createFolder({\n          location: `${pathStartsWithSlash ? \"/\" : \"\"}${folderLocation}`,\n        })\n      }\n    }),\n  )\n}\n\nexport const writeFileFromString = (location, content) => {\n  return createFolderUntil({ location }).then(() => {\n    return new Promise((resolve, reject) => {\n      fs.writeFile(location, content, (error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve()\n        }\n      })\n    })\n  })\n}\n","import fs from \"fs\"\n\nexport const getFileContentAsString = (location) =>\n  new Promise((resolve, reject) => {\n    fs.readFile(location, (error, buffer) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(buffer.toString())\n      }\n    })\n  })\n","const semver = (version) => {\n  if (typeof version === \"number\") {\n    return {\n      major: version,\n      minor: 0,\n      patch: 0,\n    }\n  }\n  if (typeof version === \"string\") {\n    const parts = version.split(\".\")\n    return {\n      major: Number(parts[0]),\n      minor: parts[1] ? Number(parts[1]) : 0,\n      patch: parts[2] ? Number(parts[2]) : 0,\n    }\n  }\n  throw new TypeError(`version must be a number or a string, got: ${typeof version}`)\n}\n\nexport const compareVersion = (versionA, versionB) => {\n  const semanticVersionA = semver(versionA)\n  const semanticVersionB = semver(versionB)\n\n  const majorDiff = semanticVersionA.major - semanticVersionB.major\n  if (majorDiff > 0) {\n    return majorDiff\n  }\n  if (majorDiff < 0) {\n    return majorDiff\n  }\n\n  const minorDiff = semanticVersionA.minor - semanticVersionB.minor\n  if (minorDiff > 0) {\n    return minorDiff\n  }\n  if (minorDiff < 0) {\n    return minorDiff\n  }\n\n  const patchDiff = semanticVersionA.patch - semanticVersionB.patch\n  if (patchDiff > 0) {\n    return patchDiff\n  }\n  if (patchDiff < 0) {\n    return patchDiff\n  }\n\n  return 0\n}\n\nexport const versionIsAbove = (versionSupposedAbove, versionSupposedBelow) => {\n  return compareVersion(versionSupposedAbove, versionSupposedBelow) > 0\n}\n\nexport const versionIsBelow = (versionSupposedBelow, versionSupposedAbove) => {\n  return compareVersion(versionSupposedBelow, versionSupposedAbove) < 0\n}\n","import { versionIsBelow } from \"./versionCompare.js\"\n\nconst getPlatformVersionForPlugin = (compatMap, pluginName, platformName) => {\n  if (pluginName in compatMap === false) {\n    throw new Error(`unknown plugin ${pluginName}`)\n  }\n  const pluginCompatMap = compatMap[pluginName]\n  return platformName in pluginCompatMap ? pluginCompatMap[platformName] : \"Infinity\"\n}\n\nconst getHighestVersionFromPluginNames = (compatMap, pluginNames, platformName) => {\n  return pluginNames.reduce((previous, pluginName) => {\n    const versionForPlugin = getPlatformVersionForPlugin(compatMap, pluginName, platformName)\n    if (versionIsBelow(previous, versionForPlugin)) {\n      return String(versionForPlugin)\n    }\n    return previous\n  }, \"0\")\n}\n\n/*\nreturns\n{\n\t41: ['transform-literals', 'transform-template-literals'], // below 41 we need these plugins\n\t44: ['transform-template-literals'] // below 44 we need these plugins\n\tInfinity: [],\n}\n*/\nconst getPlatformCompatMap = (compatMap, platformName) => {\n  const platformCompatMap = {}\n\n  Object.keys(compatMap).forEach((pluginName) => {\n    const platformVersionForPlugin = getPlatformVersionForPlugin(\n      compatMap,\n      pluginName,\n      platformName,\n    )\n    const pluginNames = [\n      ...(platformVersionForPlugin in platformCompatMap\n        ? platformCompatMap[platformVersionForPlugin]\n        : []),\n      pluginName,\n    ].sort()\n    platformCompatMap[platformVersionForPlugin] = pluginNames\n  })\n\n  return platformCompatMap\n}\n\n/*\nreturns\n[\n\t{\n\t\tpluginNames: ['transform-literals', 'transform-template-literals',],\n\t\tcompatMap: {\n\t\t\tchrome: [41, 44]\n\t\t},\n\t},\n\t{\n\t\tpluginNames: ['transform-template-literals'],\n\t\tcompatMap: {\n\t\t\tchrome: [44]\n\t\t},\n\t},\n}\n*/\nexport const generateGroupFromCompatMap = (compatMap, platformNames) => {\n  const platformAndCompatMap = platformNames.map((platformName) => {\n    return {\n      platformName,\n      platformCompatMap: getPlatformCompatMap(compatMap, platformName),\n    }\n  })\n\n  const groups = []\n  platformAndCompatMap.forEach(({ platformName, platformCompatMap }) => {\n    Object.keys(platformCompatMap).forEach((version) => {\n      const pluginNames = platformCompatMap[version]\n      const existingGroup = groups.find((group) => {\n        return group.pluginNames.join(\"\") === pluginNames.join(\"\")\n      })\n      const highestVersion = getHighestVersionFromPluginNames(compatMap, pluginNames, platformName)\n      if (existingGroup) {\n        const groupCompatMap = existingGroup.compatMap\n        groupCompatMap[platformName] = [\n          ...(platformName in groupCompatMap ? groupCompatMap[platformName] : []),\n          highestVersion,\n        ]\n      } else {\n        groups.push({\n          pluginNames,\n          compatMap: { [platformName]: [highestVersion] },\n        })\n      }\n    })\n  })\n\n  return groups\n}\n","import { versionIsAbove } from \"./versionCompare.js\"\n\nconst mergePluginNames = (pluginList, secondPluginList) => {\n  return [...pluginList, ...secondPluginList.filter((plugin) => pluginList.indexOf(plugin) === -1)]\n}\n\nconst getChunkSizes = (array, size) => {\n  let i = 0\n  const chunkSize = Math.ceil(array.length / size)\n  const chunkSizes = []\n  while (i < array.length) {\n    if (i + chunkSize > array.length) {\n      const chunkSize = array.length - i\n      i += chunkSize\n      chunkSizes.push(chunkSize)\n    } else {\n      i += chunkSize\n      chunkSizes.push(chunkSize)\n    }\n  }\n  return chunkSizes\n}\n\nconst highestVersion = (a, b) => {\n  return versionIsAbove(a, b) ? a : b\n}\n\nconst groupReducer = (previous, group) => {\n  const pluginNames = mergePluginNames(previous.pluginNames, group.pluginNames).sort()\n\n  const previousCompatMap = previous.compatMap\n  const groupCompatMap = group.compatMap\n  const compatMap = { ...previousCompatMap }\n  Object.keys(groupCompatMap).forEach((platformName) => {\n    groupCompatMap[platformName].forEach((platformVersion) => {\n      compatMap[platformName] = String(\n        platformName in compatMap\n          ? highestVersion(compatMap[platformName], platformVersion)\n          : platformVersion,\n      )\n    })\n  })\n\n  return {\n    pluginNames,\n    compatMap,\n  }\n}\n\nexport const limitGroup = (groups, getScoreForGroup, count = 4) => {\n  let i = 0\n  const chunkSizes = getChunkSizes(groups, count).reverse()\n  const finalGroups = []\n  const sortedGroups = groups.sort((a, b) => getScoreForGroup(b) - getScoreForGroup(a))\n  let remainingGroups = sortedGroups\n\n  while (i < chunkSizes.length) {\n    const groupsToMerge = remainingGroups.slice(0, chunkSizes[i])\n    remainingGroups = remainingGroups.slice(chunkSizes[i])\n    const mergedGroup = groupsToMerge.reduce(groupReducer, {\n      pluginNames: [],\n      compatMap: {},\n    })\n    if (Object.keys(mergedGroup.compatMap).length) {\n      finalGroups.push(mergedGroup)\n    }\n    i++\n  }\n\n  return finalGroups\n}\n","import { versionIsBelow, versionIsAbove } from \"./versionCompare.js\"\n\nconst createGetScoreFromVersionUsage = (stats) => {\n  const versionNames = Object.keys(stats)\n  if (versionNames.length === 0) {\n    return () => null\n  }\n  const sortedVersions = versionNames.sort((versionA, versionB) =>\n    versionIsBelow(versionA, versionB),\n  )\n  const highestVersion = sortedVersions.shift()\n\n  return (platformVersion) => {\n    if (platformVersion === highestVersion || versionIsAbove(platformVersion, highestVersion)) {\n      return stats[highestVersion]\n    }\n    const closestVersion = sortedVersions.find((version) => {\n      return platformVersion === version || versionIsAbove(platformVersion, version)\n    })\n    return closestVersion ? stats[closestVersion] : null\n  }\n}\n\nconst createGetScoreFromPlatformUsage = (stats) => {\n  const platformNames = Object.keys(stats)\n  const scoreMap = {}\n  platformNames.forEach((platformName) => {\n    scoreMap[platformName] = createGetScoreFromVersionUsage(stats[platformName])\n  })\n  return (platformName, platformVersion) => {\n    if (platformName in scoreMap) {\n      const versionUsage = scoreMap[platformName](platformVersion)\n      return versionUsage === null ? stats.other : versionUsage\n    }\n    return stats.other\n  }\n}\n\nexport const createGetScoreForGroupCompatMap = (stats) => {\n  const getScoreFromPlatformUsage = createGetScoreFromPlatformUsage(stats)\n\n  const getPlatformScore = (platformName, versions) => {\n    return versions.reduce((previous, version) => {\n      return previous + getScoreFromPlatformUsage(platformName, version)\n    }, 0)\n  }\n\n  const getScore = (groupCompatMap) => {\n    return Object.keys(groupCompatMap).reduce((previous, platformName) => {\n      return previous + getPlatformScore(platformName, groupCompatMap[platformName])\n    }, 0)\n  }\n\n  return getScore\n}\n","// https://github.com/babel/babel/blob/master/packages/babel-preset-env/data/plugins.json\n\nimport { generateGroupFromCompatMap } from \"./generateGroupFromCompatMap.js\"\nimport { limitGroup } from \"./limitGroup.js\"\nimport { createGetScoreForGroupCompatMap } from \"./createGetScoreForGroupCompatMap.js\"\nimport { versionIsBelow } from \"./versionCompare.js\"\nimport availablePlugins from \"@babel/preset-env/lib/available-plugins.js\"\n\nexport const defaultPluginsCompatMap = require(\"@babel/preset-env/data/plugins.json\")\n\nexport const removePluginsFromCompatMap = (compatMap, pluginNames) => {\n  const requiredCompatMap = {}\n  pluginNames.forEach((pluginName) => {\n    requiredCompatMap[pluginName] = compatMap[pluginName]\n  })\n  return requiredCompatMap\n}\n\nconst PLATFORM_NAMES = [\"chrome\", \"edge\", \"firefox\", \"safari\", \"node\", \"ios\", \"opera\", \"electron\"]\n\nconst defaultStats = {\n  chrome: {\n    \"51\": 0.6,\n    \"44\": 0.01,\n  },\n  firefox: {\n    \"53\": 0.6,\n    \"0\": 0.1, // it means oldest version of firefox will get a score of 0.1\n  },\n  edge: {\n    \"12\": 0.1,\n    \"0\": 0.001,\n  },\n  safari: {\n    \"10\": 0.1,\n    \"0\": 0.001,\n  },\n  node: {\n    \"8\": 0.5,\n    \"0\": 0.001,\n  },\n  other: 0.001,\n}\n\nconst getPluginTranpilationComplexity = () => 1\n\nconst getGroupTranspilationComplexityScore = (group) =>\n  group.pluginNames.reduce(\n    (previous, pluginName) => previous + getPluginTranpilationComplexity(pluginName),\n    0,\n  )\n\nexport const getPluginsFromNames = (pluginNames) =>\n  pluginNames.map((name) => availablePlugins[name])\n\nexport const createGetGroupForPlatform = (\n  {\n    stats = defaultStats,\n    compatMap = defaultPluginsCompatMap,\n    size = 4,\n    moduleOutput,\n    platformNames = PLATFORM_NAMES,\n  } = {},\n) => {\n  // hardcode that nothing supports module for now\n  // of course we would like to use\n  // https://github.com/babel/babel/blob/090c364a90fe73d36a30707fc612ce037bdbbb24/packages/babel-preset-env/data/built-in-modules.json#L1\n  // but let's force it for now\n  // and once everything works fine we'll test how it behaves with native modules\n  if (moduleOutput === \"commonjs\") {\n    compatMap[\"transform-modules-commonjs\"] = {}\n  }\n  if (moduleOutput === \"systemjs\") {\n    compatMap[\"transform-modules-systemjs\"] = {}\n  }\n\n  const groupWithEverything = {\n    pluginNames: Object.keys(compatMap),\n    compatMap: {},\n  }\n\n  const groupWithNothing = {\n    pluginNames: [],\n    compatMap: {},\n  }\n\n  const allGroups = generateGroupFromCompatMap(compatMap, platformNames)\n  const getScoreForGroupCompatMap = createGetScoreForGroupCompatMap(stats)\n  const groups = limitGroup(\n    allGroups,\n    ({ compatMap }) => getScoreForGroupCompatMap(compatMap),\n    size,\n  )\n\n  const groupsSortedByComplexityToTranspile = groups.sort(\n    (a, b) => getGroupTranspilationComplexityScore(a) - getGroupTranspilationComplexityScore(b),\n  )\n\n  const getGroupForPlatform = ({ platformName, platformVersion }) => {\n    const platformIsUnknown = groups.every(({ compatMap }) => platformName in compatMap === false)\n    if (platformIsUnknown) {\n      return groupWithEverything\n    }\n\n    const groupWithVersionAbovePlatform = groupsSortedByComplexityToTranspile.find(\n      ({ compatMap }) => {\n        if (platformName in compatMap === false) {\n          return false\n        }\n        return versionIsBelow(platformVersion, compatMap[platformName])\n      },\n    )\n    if (groupWithVersionAbovePlatform) {\n      return groupWithVersionAbovePlatform\n    }\n    return groupWithNothing\n  }\n\n  return {\n    getGroupForPlatform,\n    getAllGroup: () => [groupWithEverything, ...groups, groupWithNothing],\n  }\n}\n","import path from \"path\"\nimport { createFileStructure } from \"@dmail/project-structure\"\nimport { getFileContentAsString } from \"./getFileContentAsString.js\"\nimport { writeFileFromString } from \"./writeFileFromString.js\"\nimport {\n  createGetGroupForPlatform,\n  getPluginsFromNames,\n} from \"./createGetGroup/createGetGroupForPlatform.js\"\n\nconst { transformAsync } = require(\"@babel/core\") // rollup fails if using import here\n\nexport const compileFileStructure = ({\n  root,\n  config = \"structure.config.js\",\n  predicate = ({ compile }) => compile,\n  into = \"dist\",\n  platformName = \"node\",\n  platformVersion = \"8.0\",\n  moduleOutput = \"commonjs\",\n}) => {\n  const { getGroupForPlatform } = createGetGroupForPlatform({\n    moduleOutput,\n  })\n\n  debugger\n  const group = getGroupForPlatform({\n    platformName,\n    platformVersion,\n  })\n  const plugins = getPluginsFromNames(group.pluginNames)\n\n  const transpile = ({ code, filename, sourceFileName }) => {\n    return transformAsync(code, {\n      plugins,\n      filename,\n      sourceMaps: true,\n      sourceFileName,\n    })\n  }\n\n  const compileAndWrite = ({ absoluteName, relativeName }) => {\n    return getFileContentAsString(absoluteName).then((source) => {\n      const buildRelativeName = `${into}/${relativeName}`\n      const buildLocation = `${root}/${buildRelativeName}`\n      const sourceMapName = `${path.basename(relativeName)}.map`\n      const sourceMapLocationForSource = `${sourceMapName}`\n      const sourceMapLocation = `${root}/${into}/${relativeName}.map`\n      const sourceNameForSourceMap = path.relative(path.dirname(sourceMapLocation), absoluteName)\n\n      return transpile({\n        code: source,\n        filename: absoluteName,\n        sourceFileName: sourceNameForSourceMap,\n      })\n        .then(({ code, map }) => {\n          if (map) {\n            code = `${code}\n//# sourceMappingURL=${sourceMapLocationForSource}`\n            return Promise.all([\n              writeFileFromString(buildLocation, code),\n              writeFileFromString(sourceMapLocation, JSON.stringify(map, null, \"  \")),\n            ])\n          }\n\n          return writeFileFromString(buildLocation, code)\n        })\n        .then(() => {\n          console.log(`${relativeName} -> ${buildRelativeName} `)\n        })\n    })\n  }\n\n  return createFileStructure({ root, config }).then(({ forEachFileMatching }) => {\n    return forEachFileMatching(predicate, compileAndWrite)\n  })\n}\n"],"names":["sequence","require","getFileLStat","path","Promise","resolve","reject","fs","lstat","error","status","reason","code","createFolder","location","mkdir","then","stat","isDirectory","normalizeSeparation","filename","replace","createFolderUntil","pathStartsWithSlash","slice","folders","split","pop","map","_","index","folderLocation","join","writeFileFromString","content","writeFile","getFileContentAsString","readFile","buffer","toString","semver","version","major","minor","patch","parts","Number","TypeError","compareVersion","versionA","versionB","semanticVersionA","semanticVersionB","majorDiff","minorDiff","patchDiff","versionIsAbove","versionSupposedAbove","versionSupposedBelow","versionIsBelow","getPlatformVersionForPlugin","compatMap","pluginName","platformName","Error","pluginCompatMap","getHighestVersionFromPluginNames","pluginNames","reduce","previous","versionForPlugin","String","getPlatformCompatMap","platformCompatMap","Object","keys","forEach","platformVersionForPlugin","sort","generateGroupFromCompatMap","platformNames","platformAndCompatMap","groups","existingGroup","find","group","highestVersion","groupCompatMap","push","mergePluginNames","pluginList","secondPluginList","filter","plugin","indexOf","getChunkSizes","array","size","i","chunkSize","Math","ceil","length","chunkSizes","a","b","groupReducer","previousCompatMap","platformVersion","limitGroup","getScoreForGroup","count","reverse","finalGroups","sortedGroups","remainingGroups","groupsToMerge","mergedGroup","createGetScoreFromVersionUsage","stats","versionNames","sortedVersions","shift","closestVersion","createGetScoreFromPlatformUsage","scoreMap","versionUsage","other","createGetScoreForGroupCompatMap","getScoreFromPlatformUsage","getPlatformScore","versions","getScore","defaultPluginsCompatMap","removePluginsFromCompatMap","requiredCompatMap","PLATFORM_NAMES","defaultStats","chrome","firefox","edge","safari","node","getPluginTranpilationComplexity","getGroupTranspilationComplexityScore","getPluginsFromNames","name","availablePlugins","createGetGroupForPlatform","moduleOutput","groupWithEverything","groupWithNothing","allGroups","getScoreForGroupCompatMap","groupsSortedByComplexityToTranspile","getGroupForPlatform","platformIsUnknown","every","groupWithVersionAbovePlatform","getAllGroup","transformAsync","compileFileStructure","root","config","predicate","compile","into","plugins","transpile","sourceFileName","sourceMaps","compileAndWrite","absoluteName","relativeName","source","buildRelativeName","buildLocation","sourceMapName","basename","sourceMapLocationForSource","sourceMapLocation","sourceNameForSourceMap","relative","dirname","all","JSON","stringify","console","log","createFileStructure","forEachFileMatching"],"mappings":";;;;;;;;;;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;;AAEA,MAAMC,YAAY,GAAIC,OAAD,IAAU;SACtB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCC,EAAE,CAACC,KAAH,CAASL,OAAT,EAAe,CAACM,KAAD,EAAQD,KAAR,KAAkB;UAC3BC,KAAJ,EAAW;QACTH,MAAM,CAAC;UAAEI,MAAM,EAAE,GAAV;UAAeC,MAAM,EAAEF,KAAK,CAACG;SAA9B,CAAN;OADF,MAEO;QACLP,OAAO,CAACG,KAAD,CAAP;;KAJJ;GADK,CAAP;CADF;;AAYA,MAAMK,YAAY,GAAG,CAAC;EAAEC;CAAH,KAAkB;SAC9B,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCC,EAAE,CAACQ,KAAH,CAASD,QAAT,EAAoBL,KAAD,IAAW;UACxBA,KAAJ,EAAW;;YAELA,KAAK,CAACG,IAAN,KAAe,QAAnB,EAA6B;UAC3BV,YAAY,CAACY,QAAD,CAAZ,CAAuBE,IAAvB,CAA6BC,IAAD,IAAU;gBAChCA,IAAI,CAACC,WAAL,EAAJ,EAAwB;cACtBb,OAAO;aADT,MAEO;cACLC,MAAM,CAAC;gBAAEI,MAAM,EAAE,GAAV;gBAAeC,MAAM,EAAE;eAAxB,CAAN;;WAJJ;SADF,MAQO;UACLL,MAAM,CAAC;YAAEI,MAAM,EAAE,GAAV;YAAeC,MAAM,EAAEF,KAAK,CAACG;WAA9B,CAAN;;OAXJ,MAaO;QACLP,OAAO;;KAfX;GADK,CAAP;CADF;;AAuBA,MAAMc,mBAAmB,GAAIC,QAAD,IAAcA,QAAQ,CAACC,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAA1C;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;EAAER;CAAH,KAAkB;MACtCX,OAAI,GAAGgB,mBAAmB,CAACL,QAAD,CAA9B,CAD0C;;;;QAKpCS,mBAAmB,GAAGpB,OAAI,CAAC,CAAD,CAAJ,KAAY,GAAxC;;MACIoB,mBAAJ,EAAyB;IACvBpB,OAAI,GAAGA,OAAI,CAACqB,KAAL,CAAW,CAAX,CAAP;;;QAEIC,OAAO,GAAGtB,OAAI,CAACuB,KAAL,CAAW,GAAX,CAAhB;EAEAD,OAAO,CAACE,GAAR;SAEO3B,QAAQ,CACbyB,OAAO,CAACG,GAAR,CAAY,CAACC,CAAD,EAAIC,KAAJ,KAAc;WACjB,MAAM;YACLC,cAAc,GAAGN,OAAO,CAACD,KAAR,CAAc,CAAd,EAAiBM,KAAK,GAAG,CAAzB,EAA4BE,IAA5B,CAAiC,GAAjC,CAAvB;aACOnB,YAAY,CAAC;QAClBC,QAAQ,EAAG,GAAES,mBAAmB,GAAG,GAAH,GAAS,EAAG,GAAEQ,cAAe;OAD5C,CAAnB;KAFF;GADF,CADa,CAAf;CAbF;;AAyBA,MAAaE,mBAAmB,GAAG,CAACnB,QAAD,EAAWoB,OAAX,KAAuB;SACjDZ,iBAAiB,CAAC;IAAER;GAAH,CAAjB,CAAgCE,IAAhC,CAAqC,MAAM;WACzC,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtCC,EAAE,CAAC4B,SAAH,CAAarB,QAAb,EAAuBoB,OAAvB,EAAiCzB,KAAD,IAAW;YACrCA,KAAJ,EAAW;UACTH,MAAM,CAACG,KAAD,CAAN;SADF,MAEO;UACLJ,OAAO;;OAJX;KADK,CAAP;GADK,CAAP;CADK;;AChEA,MAAM+B,sBAAsB,GAAItB,QAAD,IACpC,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAC/BC,EAAE,CAAC8B,QAAH,CAAYvB,QAAZ,EAAsB,CAACL,KAAD,EAAQ6B,MAAR,KAAmB;QACnC7B,KAAJ,EAAW;MACTH,MAAM,CAACG,KAAD,CAAN;KADF,MAEO;MACLJ,OAAO,CAACiC,MAAM,CAACC,QAAP,EAAD,CAAP;;GAJJ;CADF,CADK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFP,MAAMC,MAAM,GAAIC,OAAD,IAAa;MACtB,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;WACxB;MACLC,KAAK,EAAED,OADF;MAELE,KAAK,EAAE,CAFF;MAGLC,KAAK,EAAE;KAHT;;;MAME,OAAOH,OAAP,KAAmB,QAAvB,EAAiC;UACzBI,KAAK,GAAGJ,OAAO,CAACf,KAAR,CAAc,GAAd,CAAd;WACO;MACLgB,KAAK,EAAEI,MAAM,CAACD,KAAK,CAAC,CAAD,CAAN,CADR;MAELF,KAAK,EAAEE,KAAK,CAAC,CAAD,CAAL,GAAWC,MAAM,CAACD,KAAK,CAAC,CAAD,CAAN,CAAjB,GAA8B,CAFhC;MAGLD,KAAK,EAAEC,KAAK,CAAC,CAAD,CAAL,GAAWC,MAAM,CAACD,KAAK,CAAC,CAAD,CAAN,CAAjB,GAA8B;KAHvC;;;QAMI,IAAIE,SAAJ,CAAe,8CAA6C,OAAON,OAAQ,EAA3E,CAAN;CAhBF;;AAmBA,AAAO,MAAMO,cAAc,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;QAC9CC,gBAAgB,GAAGX,MAAM,CAACS,QAAD,CAA/B;QACMG,gBAAgB,GAAGZ,MAAM,CAACU,QAAD,CAA/B;QAEMG,SAAS,GAAGF,gBAAgB,CAACT,KAAjB,GAAyBU,gBAAgB,CAACV,KAA5D;;MACIW,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;MAEEA,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;QAGIC,SAAS,GAAGH,gBAAgB,CAACR,KAAjB,GAAyBS,gBAAgB,CAACT,KAA5D;;MACIW,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;MAEEA,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;QAGIC,SAAS,GAAGJ,gBAAgB,CAACP,KAAjB,GAAyBQ,gBAAgB,CAACR,KAA5D;;MACIW,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;MAEEA,SAAS,GAAG,CAAhB,EAAmB;WACVA,SAAP;;;SAGK,CAAP;CA5BK;AA+BP,MAAaC,cAAc,GAAG,CAACC,oBAAD,EAAuBC,oBAAvB,KAAgD;SACrEV,cAAc,CAACS,oBAAD,EAAuBC,oBAAvB,CAAd,GAA6D,CAApE;CADK;AAIP,MAAaC,cAAc,GAAG,CAACD,oBAAD,EAAuBD,oBAAvB,KAAgD;SACrET,cAAc,CAACU,oBAAD,EAAuBD,oBAAvB,CAAd,GAA6D,CAApE;CADK;;ACpDP,MAAMG,2BAA2B,GAAG,CAACC,SAAD,EAAYC,UAAZ,EAAwBC,YAAxB,KAAyC;MACvED,UAAU,IAAID,SAAd,KAA4B,KAAhC,EAAuC;UAC/B,IAAIG,KAAJ,CAAW,kBAAiBF,UAAW,EAAvC,CAAN;;;QAEIG,eAAe,GAAGJ,SAAS,CAACC,UAAD,CAAjC;SACOC,YAAY,IAAIE,eAAhB,GAAkCA,eAAe,CAACF,YAAD,CAAjD,GAAkE,UAAzE;CALF;;AAQA,MAAMG,gCAAgC,GAAG,CAACL,SAAD,EAAYM,WAAZ,EAAyBJ,YAAzB,KAA0C;SAC1EI,WAAW,CAACC,MAAZ,CAAmB,CAACC,QAAD,EAAWP,UAAX,KAA0B;UAC5CQ,gBAAgB,GAAGV,2BAA2B,CAACC,SAAD,EAAYC,UAAZ,EAAwBC,YAAxB,CAApD;;QACIJ,cAAc,CAACU,QAAD,EAAWC,gBAAX,CAAlB,EAAgD;aACvCC,MAAM,CAACD,gBAAD,CAAb;;;WAEKD,QAAP;GALK,EAMJ,GANI,CAAP;CADF;;;;;;;;;;;AAkBA,MAAMG,oBAAoB,GAAG,CAACX,SAAD,EAAYE,YAAZ,KAA6B;QAClDU,iBAAiB,GAAG,EAA1B;EAEAC,MAAM,CAACC,IAAP,CAAYd,SAAZ,EAAuBe,OAAvB,CAAgCd,UAAD,IAAgB;UACvCe,wBAAwB,GAAGjB,2BAA2B,CAC1DC,SAD0D,EAE1DC,UAF0D,EAG1DC,YAH0D,CAA5D;;UAKMI,WAAW,GAAG,mBACdU,wBAAwB,IAAIJ,iBAA5B,GACAA,iBAAiB,CAACI,wBAAD,CADjB,GAEA,EAHc,UAIlBf,UAJkB,GAKlBgB,IALkB,EAApB;;IAMAL,iBAAiB,CAACI,wBAAD,CAAjB,GAA8CV,WAA9C;GAZF;SAeOM,iBAAP;CAlBF;;;;;;;;;;;;;;;;;;;;AAsCA,MAAaM,0BAA0B,GAAG,CAAClB,SAAD,EAAYmB,aAAZ,KAA8B;QAChEC,oBAAoB,GAAGD,aAAa,CAACpD,GAAd,CAAmBmC,YAAD,IAAkB;WACxD;MACLA,YADK;MAELU,iBAAiB,EAAED,oBAAoB,CAACX,SAAD,EAAYE,YAAZ;KAFzC;GAD2B,CAA7B;QAOMmB,MAAM,GAAG,EAAf;EACAD,oBAAoB,CAACL,OAArB,CAA6B,CAAC;IAAEb,YAAF;IAAgBU;GAAjB,KAAyC;IACpEC,MAAM,CAACC,IAAP,CAAYF,iBAAZ,EAA+BG,OAA/B,CAAwCnC,OAAD,IAAa;YAC5C0B,WAAW,GAAGM,iBAAiB,CAAChC,OAAD,CAArC;YACM0C,aAAa,GAAGD,MAAM,CAACE,IAAP,CAAaC,KAAD,IAAW;eACpCA,KAAK,CAAClB,WAAN,CAAkBnC,IAAlB,CAAuB,EAAvB,MAA+BmC,WAAW,CAACnC,IAAZ,CAAiB,EAAjB,CAAtC;OADoB,CAAtB;YAGMsD,cAAc,GAAGpB,gCAAgC,CAACL,SAAD,EAAYM,WAAZ,EAAyBJ,YAAzB,CAAvD;;UACIoB,aAAJ,EAAmB;cACXI,cAAc,GAAGJ,aAAa,CAACtB,SAArC;QACA0B,cAAc,CAACxB,YAAD,CAAd,sBACMA,YAAY,IAAIwB,cAAhB,GAAiCA,cAAc,CAACxB,YAAD,CAA/C,GAAgE,EADtE,UAEEuB,cAFF;OAFF,MAMO;QACLJ,MAAM,CAACM,IAAP,CAAY;UACVrB,WADU;UAEVN,SAAS,EAAE;aAAGE,YAAD,GAAgB,CAACuB,cAAD;;SAF/B;;KAbJ;GADF;SAsBOJ,MAAP;CA/BK;;AChEP,MAAMO,gBAAgB,GAAG,CAACC,UAAD,EAAaC,gBAAb,KAAkC;4BAC9CD,UAAX,4BAA0BC,gBAAgB,CAACC,MAAjB,CAAyBC,MAAD,IAAYH,UAAU,CAACI,OAAX,CAAmBD,MAAnB,MAA+B,CAAC,CAApE,CAA1B;CADF;;AAIA,MAAME,aAAa,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;MACjCC,CAAC,GAAG,CAAR;QACMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,CAACM,MAAN,GAAeL,IAAzB,CAAlB;QACMM,UAAU,GAAG,EAAnB;;SACOL,CAAC,GAAGF,KAAK,CAACM,MAAjB,EAAyB;QACnBJ,CAAC,GAAGC,SAAJ,GAAgBH,KAAK,CAACM,MAA1B,EAAkC;YAC1BH,SAAS,GAAGH,KAAK,CAACM,MAAN,GAAeJ,CAAjC;MACAA,CAAC,IAAIC,SAAL;MACAI,UAAU,CAACf,IAAX,CAAgBW,SAAhB;KAHF,MAIO;MACLD,CAAC,IAAIC,SAAL;MACAI,UAAU,CAACf,IAAX,CAAgBW,SAAhB;;;;SAGGI,UAAP;CAdF;;AAiBA,MAAMjB,cAAc,GAAG,CAACkB,CAAD,EAAIC,CAAJ,KAAU;SACxBjD,cAAc,CAACgD,CAAD,EAAIC,CAAJ,CAAd,GAAuBD,CAAvB,GAA2BC,CAAlC;CADF;;AAIA,MAAMC,YAAY,GAAG,CAACrC,QAAD,EAAWgB,KAAX,KAAqB;QAClClB,WAAW,GAAGsB,gBAAgB,CAACpB,QAAQ,CAACF,WAAV,EAAuBkB,KAAK,CAAClB,WAA7B,CAAhB,CAA0DW,IAA1D,EAApB;QAEM6B,iBAAiB,GAAGtC,QAAQ,CAACR,SAAnC;QACM0B,cAAc,GAAGF,KAAK,CAACxB,SAA7B;;QACMA,SAAS,qBAAQ8C,iBAAR,CAAf;;EACAjC,MAAM,CAACC,IAAP,CAAYY,cAAZ,EAA4BX,OAA5B,CAAqCb,YAAD,IAAkB;IACpDwB,cAAc,CAACxB,YAAD,CAAd,CAA6Ba,OAA7B,CAAsCgC,eAAD,IAAqB;MACxD/C,SAAS,CAACE,YAAD,CAAT,GAA0BQ,MAAM,CAC9BR,YAAY,IAAIF,SAAhB,GACIyB,cAAc,CAACzB,SAAS,CAACE,YAAD,CAAV,EAA0B6C,eAA1B,CADlB,GAEIA,eAH0B,CAAhC;KADF;GADF;SAUO;IACLzC,WADK;IAELN;GAFF;CAhBF;;AAsBA,MAAagD,UAAU,GAAG,CAAC3B,MAAD,EAAS4B,gBAAT,EAA2BC,KAAK,GAAG,CAAnC,KAAyC;MAC7Db,CAAC,GAAG,CAAR;QACMK,UAAU,GAAGR,aAAa,CAACb,MAAD,EAAS6B,KAAT,CAAb,CAA6BC,OAA7B,EAAnB;QACMC,WAAW,GAAG,EAApB;QACMC,YAAY,GAAGhC,MAAM,CAACJ,IAAP,CAAY,CAAC0B,CAAD,EAAIC,CAAJ,KAAUK,gBAAgB,CAACL,CAAD,CAAhB,GAAsBK,gBAAgB,CAACN,CAAD,CAA5D,CAArB;MACIW,eAAe,GAAGD,YAAtB;;SAEOhB,CAAC,GAAGK,UAAU,CAACD,MAAtB,EAA8B;UACtBc,aAAa,GAAGD,eAAe,CAAC3F,KAAhB,CAAsB,CAAtB,EAAyB+E,UAAU,CAACL,CAAD,CAAnC,CAAtB;IACAiB,eAAe,GAAGA,eAAe,CAAC3F,KAAhB,CAAsB+E,UAAU,CAACL,CAAD,CAAhC,CAAlB;UACMmB,WAAW,GAAGD,aAAa,CAAChD,MAAd,CAAqBsC,YAArB,EAAmC;MACrDvC,WAAW,EAAE,EADwC;MAErDN,SAAS,EAAE;KAFO,CAApB;;QAIIa,MAAM,CAACC,IAAP,CAAY0C,WAAW,CAACxD,SAAxB,EAAmCyC,MAAvC,EAA+C;MAC7CW,WAAW,CAACzB,IAAZ,CAAiB6B,WAAjB;;;IAEFnB,CAAC;;;SAGIe,WAAP;CApBK;;AC/CP,MAAMK,8BAA8B,GAAIC,KAAD,IAAW;QAC1CC,YAAY,GAAG9C,MAAM,CAACC,IAAP,CAAY4C,KAAZ,CAArB;;MACIC,YAAY,CAAClB,MAAb,KAAwB,CAA5B,EAA+B;WACtB,MAAM,IAAb;;;QAEImB,cAAc,GAAGD,YAAY,CAAC1C,IAAb,CAAkB,CAAC7B,QAAD,EAAWC,QAAX,KACvCS,cAAc,CAACV,QAAD,EAAWC,QAAX,CADO,CAAvB;QAGMoC,cAAc,GAAGmC,cAAc,CAACC,KAAf,EAAvB;SAEQd,eAAD,IAAqB;QACtBA,eAAe,KAAKtB,cAApB,IAAsC9B,cAAc,CAACoD,eAAD,EAAkBtB,cAAlB,CAAxD,EAA2F;aAClFiC,KAAK,CAACjC,cAAD,CAAZ;;;UAEIqC,cAAc,GAAGF,cAAc,CAACrC,IAAf,CAAqB3C,OAAD,IAAa;aAC/CmE,eAAe,KAAKnE,OAApB,IAA+Be,cAAc,CAACoD,eAAD,EAAkBnE,OAAlB,CAApD;KADqB,CAAvB;WAGOkF,cAAc,GAAGJ,KAAK,CAACI,cAAD,CAAR,GAA2B,IAAhD;GAPF;CAVF;;AAqBA,MAAMC,+BAA+B,GAAIL,KAAD,IAAW;QAC3CvC,aAAa,GAAGN,MAAM,CAACC,IAAP,CAAY4C,KAAZ,CAAtB;QACMM,QAAQ,GAAG,EAAjB;EACA7C,aAAa,CAACJ,OAAd,CAAuBb,YAAD,IAAkB;IACtC8D,QAAQ,CAAC9D,YAAD,CAAR,GAAyBuD,8BAA8B,CAACC,KAAK,CAACxD,YAAD,CAAN,CAAvD;GADF;SAGO,CAACA,YAAD,EAAe6C,eAAf,KAAmC;QACpC7C,YAAY,IAAI8D,QAApB,EAA8B;YACtBC,YAAY,GAAGD,QAAQ,CAAC9D,YAAD,CAAR,CAAuB6C,eAAvB,CAArB;aACOkB,YAAY,KAAK,IAAjB,GAAwBP,KAAK,CAACQ,KAA9B,GAAsCD,YAA7C;;;WAEKP,KAAK,CAACQ,KAAb;GALF;CANF;;AAeA,MAAaC,+BAA+B,GAAIT,KAAD,IAAW;QAClDU,yBAAyB,GAAGL,+BAA+B,CAACL,KAAD,CAAjE;;QAEMW,gBAAgB,GAAG,CAACnE,YAAD,EAAeoE,QAAf,KAA4B;WAC5CA,QAAQ,CAAC/D,MAAT,CAAgB,CAACC,QAAD,EAAW5B,OAAX,KAAuB;aACrC4B,QAAQ,GAAG4D,yBAAyB,CAAClE,YAAD,EAAetB,OAAf,CAA3C;KADK,EAEJ,CAFI,CAAP;GADF;;QAMM2F,QAAQ,GAAI7C,cAAD,IAAoB;WAC5Bb,MAAM,CAACC,IAAP,CAAYY,cAAZ,EAA4BnB,MAA5B,CAAmC,CAACC,QAAD,EAAWN,YAAX,KAA4B;aAC7DM,QAAQ,GAAG6D,gBAAgB,CAACnE,YAAD,EAAewB,cAAc,CAACxB,YAAD,CAA7B,CAAlC;KADK,EAEJ,CAFI,CAAP;GADF;;SAMOqE,QAAP;CAfK;;MC9BMC,uBAAuB,GAAGpI,OAAO,CAAC,qCAAD,CAAvC;AAEP,MAAaqI,0BAA0B,GAAG,CAACzE,SAAD,EAAYM,WAAZ,KAA4B;QAC9DoE,iBAAiB,GAAG,EAA1B;EACApE,WAAW,CAACS,OAAZ,CAAqBd,UAAD,IAAgB;IAClCyE,iBAAiB,CAACzE,UAAD,CAAjB,GAAgCD,SAAS,CAACC,UAAD,CAAzC;GADF;SAGOyE,iBAAP;CALK;AAQP,MAAMC,cAAc,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB,EAA8B,QAA9B,EAAwC,MAAxC,EAAgD,KAAhD,EAAuD,OAAvD,EAAgE,UAAhE,CAAvB;AAEA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;UACA,GADA;UAEA;GAHW;EAKnBC,OAAO,EAAE;UACD,GADC;SAEF,GAFE;;GALU;EASnBC,IAAI,EAAE;UACE,GADF;SAEC;GAXY;EAanBC,MAAM,EAAE;UACA,GADA;SAED;GAfY;EAiBnBC,IAAI,EAAE;SACC,GADD;SAEC;GAnBY;EAqBnBf,KAAK,EAAE;CArBT;;AAwBA,MAAMgB,+BAA+B,GAAG,MAAM,CAA9C;;AAEA,MAAMC,oCAAoC,GAAI3D,KAAD,IAC3CA,KAAK,CAAClB,WAAN,CAAkBC,MAAlB,CACE,CAACC,QAAD,EAAWP,UAAX,KAA0BO,QAAQ,GAAG0E,+BAA+B,CAACjF,UAAD,CADtE,EAEE,CAFF,CADF;;AAMA,MAAamF,mBAAmB,GAAI9E,WAAD,IACjCA,WAAW,CAACvC,GAAZ,CAAiBsH,IAAD,IAAUC,gBAAgB,CAACD,IAAD,CAA1C,CADK;AAGP,MAAaE,yBAAyB,GAAG,CACvC;EACE7B,KAAK,GAAGkB,YADV;EAEE5E,SAAS,GAAGwE,uBAFd;EAGEpC,IAAI,GAAG,CAHT;EAIEoD,YAJF;EAKErE,aAAa,GAAGwD;IACd,EAPmC,KAQpC;;;;;;MAMCa,YAAY,KAAK,UAArB,EAAiC;IAC/BxF,SAAS,CAAC,4BAAD,CAAT,GAA0C,EAA1C;;;MAEEwF,YAAY,KAAK,UAArB,EAAiC;IAC/BxF,SAAS,CAAC,4BAAD,CAAT,GAA0C,EAA1C;;;QAGIyF,mBAAmB,GAAG;IAC1BnF,WAAW,EAAEO,MAAM,CAACC,IAAP,CAAYd,SAAZ,CADa;IAE1BA,SAAS,EAAE;GAFb;QAKM0F,gBAAgB,GAAG;IACvBpF,WAAW,EAAE,EADU;IAEvBN,SAAS,EAAE;GAFb;QAKM2F,SAAS,GAAGzE,0BAA0B,CAAClB,SAAD,EAAYmB,aAAZ,CAA5C;QACMyE,yBAAyB,GAAGzB,+BAA+B,CAACT,KAAD,CAAjE;QACMrC,MAAM,GAAG2B,UAAU,CACvB2C,SADuB,EAEvB,CAAC;IAAE3F;GAAH,KAAmB4F,yBAAyB,CAAC5F,SAAD,CAFrB,EAGvBoC,IAHuB,CAAzB;QAMMyD,mCAAmC,GAAGxE,MAAM,CAACJ,IAAP,CAC1C,CAAC0B,CAAD,EAAIC,CAAJ,KAAUuC,oCAAoC,CAACxC,CAAD,CAApC,GAA0CwC,oCAAoC,CAACvC,CAAD,CAD9C,CAA5C;;QAIMkD,mBAAmB,GAAG,CAAC;IAAE5F,YAAF;IAAgB6C;GAAjB,KAAuC;UAC3DgD,iBAAiB,GAAG1E,MAAM,CAAC2E,KAAP,CAAa,CAAC;MAAEhG;KAAH,KAAmBE,YAAY,IAAIF,SAAhB,KAA8B,KAA9D,CAA1B;;QACI+F,iBAAJ,EAAuB;aACdN,mBAAP;;;UAGIQ,6BAA6B,GAAGJ,mCAAmC,CAACtE,IAApC,CACpC,CAAC;MAAEvB;KAAH,KAAmB;UACbE,YAAY,IAAIF,SAAhB,KAA8B,KAAlC,EAAyC;eAChC,KAAP;;;aAEKF,cAAc,CAACiD,eAAD,EAAkB/C,SAAS,CAACE,YAAD,CAA3B,CAArB;KALkC,CAAtC;;QAQI+F,6BAAJ,EAAmC;aAC1BA,6BAAP;;;WAEKP,gBAAP;GAjBF;;SAoBO;IACLI,mBADK;IAELI,WAAW,EAAE,OAAOT,mBAAP,4BAA+BpE,MAA/B,IAAuCqE,gBAAvC;GAFf;CA/DK;;AC9CP,MAAM;EAAES;IAAmB/J,OAAO,CAAC,aAAD,CAAlC;;;AAEA,MAAagK,oBAAoB,GAAG,CAAC;EACnCC,IADmC;EAEnCC,MAAM,GAAG,qBAF0B;EAGnCC,SAAS,GAAG,CAAC;IAAEC;GAAH,KAAiBA,OAHM;EAInCC,IAAI,GAAG,MAJ4B;EAKnCvG,YAAY,GAAG,MALoB;EAMnC6C,eAAe,GAAG,KANiB;EAOnCyC,YAAY,GAAG;CAPmB,KAQ9B;QACE;IAAEM;MAAwBP,yBAAyB,CAAC;IACxDC;GADuD,CAAzD;;QAKMhE,KAAK,GAAGsE,mBAAmB,CAAC;IAChC5F,YADgC;IAEhC6C;GAF+B,CAAjC;QAIM2D,OAAO,GAAGtB,mBAAmB,CAAC5D,KAAK,CAAClB,WAAP,CAAnC;;QAEMqG,SAAS,GAAG,CAAC;IAAE5J,IAAF;IAAQQ,QAAR;IAAkBqJ;GAAnB,KAAwC;WACjDT,cAAc,CAACpJ,IAAD,EAAO;MAC1B2J,OAD0B;MAE1BnJ,QAF0B;MAG1BsJ,UAAU,EAAE,IAHc;MAI1BD;KAJmB,CAArB;GADF;;QASME,eAAe,GAAG,CAAC;IAAEC,YAAF;IAAgBC;GAAjB,KAAoC;WACnDzI,sBAAsB,CAACwI,YAAD,CAAtB,CAAqC5J,IAArC,CAA2C8J,MAAD,IAAY;YACrDC,iBAAiB,GAAI,GAAET,IAAK,IAAGO,YAAa,EAAlD;YACMG,aAAa,GAAI,GAAEd,IAAK,IAAGa,iBAAkB,EAAnD;YACME,aAAa,GAAI,GAAE9K,IAAI,CAAC+K,QAAL,CAAcL,YAAd,CAA4B,MAArD;YACMM,0BAA0B,GAAI,GAAEF,aAAc,EAApD;YACMG,iBAAiB,GAAI,GAAElB,IAAK,IAAGI,IAAK,IAAGO,YAAa,MAA1D;YACMQ,sBAAsB,GAAGlL,IAAI,CAACmL,QAAL,CAAcnL,IAAI,CAACoL,OAAL,CAAaH,iBAAb,CAAd,EAA+CR,YAA/C,CAA/B;aAEOJ,SAAS,CAAC;QACf5J,IAAI,EAAEkK,MADS;QAEf1J,QAAQ,EAAEwJ,YAFK;QAGfH,cAAc,EAAEY;OAHF,CAAT,CAKJrK,IALI,CAKC,CAAC;QAAEJ,IAAF;QAAQgB;OAAT,KAAmB;YACnBA,GAAJ,EAAS;UACPhB,IAAI,GAAI,GAAEA,IAAK;uBACJuK,0BAA2B,EADtC;iBAEO/K,OAAO,CAACoL,GAAR,CAAY,CACjBvJ,mBAAmB,CAAC+I,aAAD,EAAgBpK,IAAhB,CADF,EAEjBqB,mBAAmB,CAACmJ,iBAAD,EAAoBK,IAAI,CAACC,SAAL,CAAe9J,GAAf,EAAoB,IAApB,EAA0B,IAA1B,CAApB,CAFF,CAAZ,CAAP;;;eAMKK,mBAAmB,CAAC+I,aAAD,EAAgBpK,IAAhB,CAA1B;OAfG,EAiBJI,IAjBI,CAiBC,MAAM;QACV2K,OAAO,CAACC,GAAR,CAAa,GAAEf,YAAa,OAAME,iBAAkB,GAApD;OAlBG,CAAP;KARK,CAAP;GADF;;SAgCOc,oCAAmB,CAAC;IAAE3B,IAAF;IAAQC;GAAT,CAAnB,CAAsCnJ,IAAtC,CAA2C,CAAC;IAAE8K;GAAH,KAA6B;WACtEA,mBAAmB,CAAC1B,SAAD,EAAYO,eAAZ,CAA1B;GADK,CAAP;CA7DK;;;;;;;;;;;;;;"}